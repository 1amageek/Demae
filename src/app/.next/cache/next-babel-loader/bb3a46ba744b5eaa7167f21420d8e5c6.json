{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Doc, Field, SubCollection, Collection } from '@1amageek/ballcap';\nimport { Symbol } from 'common/Currency';\nimport { ShardCharacters } from './Shard';\nimport firebase from 'firebase';\n\nlet Stock =\n/** @class */\n(() => {\n  class Stock extends Doc {\n    constructor() {\n      super(...arguments);\n      this.count = 0;\n    }\n\n  }\n\n  __decorate([Field], Stock.prototype, \"count\", void 0);\n\n  return Stock;\n})();\n\nexport { Stock };\n\nlet SKU =\n/** @class */\n(() => {\n  class SKU extends Doc {\n    constructor() {\n      super(...arguments);\n      this.images = [];\n      this.assets = [];\n      this.tags = [];\n      this.shardCharacters = ShardCharacters.slice(0, 3);\n      this.currency = 'USD';\n      this.price = 0;\n      this.taxRate = 8;\n      this.inventory = {\n        type: 'finite',\n        quantity: 1\n      };\n      this.isPrivate = false;\n      this.isAvailable = true;\n      this.stocks = new Collection();\n    }\n\n    displayPrice() {\n      const symbol = Symbol(this.currency);\n      const price = this.price;\n      return `${symbol}${price.toLocaleString()}`;\n    }\n\n    tax() {\n      return Math.floor(this.price * this.taxRate / 100);\n    }\n\n    imageURLs() {\n      return this.images.map(image => {\n        if (image) {\n          return `${process.env.HOST}/assets/${image.path}`;\n        }\n\n        return undefined;\n      }).filter(value => !!value);\n    }\n\n    async updateInventory(amount) {\n      const updateInventory = firebase.functions().httpsCallable('v1-commerce-inventory-update');\n      const result = await updateInventory({\n        skuPath: this.path,\n        amount: amount\n      });\n      console.log('[APP] inventory update', result);\n    }\n\n    async increaseInventory(amount) {\n      const increaseInventory = firebase.functions().httpsCallable('v1-commerce-inventory-increase');\n      const result = await increaseInventory({\n        skuPath: this.path,\n        amount: amount\n      });\n      console.log('[APP] inventory increase', result);\n    }\n\n  }\n\n  __decorate([Field], SKU.prototype, \"images\", void 0);\n\n  __decorate([Field], SKU.prototype, \"assets\", void 0);\n\n  __decorate([Field], SKU.prototype, \"tags\", void 0);\n\n  __decorate([Field], SKU.prototype, \"providedBy\", void 0);\n\n  __decorate([Field], SKU.prototype, \"createdBy\", void 0);\n\n  __decorate([Field], SKU.prototype, \"shardCharacters\", void 0);\n\n  __decorate([Field], SKU.prototype, \"currency\", void 0);\n\n  __decorate([Field], SKU.prototype, \"productReference\", void 0);\n\n  __decorate([Field], SKU.prototype, \"name\", void 0);\n\n  __decorate([Field], SKU.prototype, \"caption\", void 0);\n\n  __decorate([Field], SKU.prototype, \"description\", void 0);\n\n  __decorate([Field], SKU.prototype, \"price\", void 0);\n\n  __decorate([Field], SKU.prototype, \"discount\", void 0);\n\n  __decorate([Field], SKU.prototype, \"taxRate\", void 0);\n\n  __decorate([Field], SKU.prototype, \"inventory\", void 0);\n\n  __decorate([Field], SKU.prototype, \"isPrivate\", void 0);\n\n  __decorate([Field], SKU.prototype, \"isAvailable\", void 0);\n\n  __decorate([Field], SKU.prototype, \"metadata\", void 0);\n\n  __decorate([SubCollection], SKU.prototype, \"stocks\", void 0);\n\n  return SKU;\n})();\n\nexport default SKU;","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/models/commerce/SKU.ts"],"names":[],"mappings":"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","sourcesContent":["import { Doc, Field, DocumentReference, SubCollection, Collection, Batch, File } from '@1amageek/ballcap'\r\nimport { CurrencyCode, Symbol } from 'common/Currency'\r\nimport { Inventory, Discount } from 'common/commerce/Types'\r\nimport { ShardType, ShardCharacters } from './Shard'\r\nimport firebase from 'firebase'\r\n\r\nexport class Stock extends Doc {\r\n\t@Field count: number = 0\r\n}\r\n\r\nexport default class SKU extends Doc {\r\n\r\n\t@Field images: File[] = []\r\n\t@Field assets: File[] = []\r\n\t@Field tags: string[] = []\r\n\t@Field providedBy!: string\r\n\t@Field createdBy!: string\r\n\t@Field shardCharacters: ShardType[] = ShardCharacters.slice(0, 3)\r\n\t@Field currency: CurrencyCode = 'USD'\r\n\t@Field productReference?: DocumentReference\r\n\t@Field name!: string\r\n\t@Field caption?: string\r\n\t@Field description?: string\r\n\t@Field price: number = 0\r\n\t@Field discount?: Discount\r\n\t@Field taxRate: number = 8\r\n\t@Field inventory: Inventory = { type: 'finite', quantity: 1 }\r\n\t@Field isPrivate: boolean = false\r\n\t@Field isAvailable: boolean = true\r\n\t@Field metadata?: any\r\n\r\n\t@SubCollection stocks: Collection<Stock> = new Collection()\r\n\r\n\tdisplayPrice() {\r\n\t\tconst symbol = Symbol(this.currency)\r\n\t\tconst price = this.price\r\n\t\treturn `${symbol}${price.toLocaleString()}`\r\n\t}\r\n\r\n\ttax() {\r\n\t\treturn Math.floor(this.price * this.taxRate / 100)\r\n\t}\r\n\r\n\timageURLs() {\r\n\t\treturn this.images.map(image => {\r\n\t\t\tif (image) {\r\n\t\t\t\treturn `${process.env.HOST}/assets/${image.path}`\r\n\t\t\t}\r\n\t\t\treturn undefined\r\n\t\t}).filter(value => !!value)\r\n\t}\r\n\r\n\tasync updateInventory(amount: number) {\r\n\t\tconst updateInventory = firebase.functions().httpsCallable('v1-commerce-inventory-update')\r\n\t\tconst result = await updateInventory({\r\n\t\t\tskuPath: this.path,\r\n\t\t\tamount: amount\r\n\t\t})\r\n\t\tconsole.log('[APP] inventory update', result)\r\n\t}\r\n\r\n\tasync increaseInventory(amount: number) {\r\n\t\tconst increaseInventory = firebase.functions().httpsCallable('v1-commerce-inventory-increase')\r\n\t\tconst result = await increaseInventory({\r\n\t\t\tskuPath: this.path,\r\n\t\t\tamount: amount\r\n\t\t})\r\n\t\tconsole.log('[APP] inventory increase', result)\r\n\t}\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}