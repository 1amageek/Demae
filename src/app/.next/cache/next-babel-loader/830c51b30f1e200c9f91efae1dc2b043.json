{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/Login.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport * as Commerce from 'models/commerce';\nimport { useSnackbar } from 'components/Snackbar';\nexport default (({\n  redirectURL = '/',\n  defaultCountry = 'JP',\n  onNext\n}) => {\n  const [setMessage] = useSnackbar();\n  const uiConfig = {\n    signInFlow: 'popup',\n    // signInSuccessUrl: redirectURL,\n    signInOptions: [{\n      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      defaultCountry: defaultCountry\n    }],\n    callbacks: {\n      signInSuccessWithAuthResult: authResult => {\n        const uid = authResult.user.uid;\n\n        if (uid) {\n          (async () => {\n            let user = await Commerce.User.get(uid);\n\n            if (!user) {\n              user = new Commerce.User(uid);\n              user.country = defaultCountry;\n              await user.save();\n            }\n\n            setMessage('success', `Welcome`);\n\n            if (redirectURL) {\n              Router.push(redirectURL);\n            }\n\n            if (onNext) {\n              onNext(user);\n            }\n          })();\n        }\n\n        return false;\n      },\n      signInFailure: async error => {\n        console.log(error);\n      }\n    }\n  };\n  return __jsx(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  });\n});","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/Login.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAP,MAAmB,aAAnB;AACA,OAAO,kBAAP,MAA+B,qCAA/B;AACA,OAAO,QAAP,MAAqB,UAArB;AACA,OAAO,KAAK,QAAZ,MAA0B,iBAA1B;AAEA,SAAS,WAAT,QAA4B,qBAA5B;AAEA,gBAAe,CAAC;AAAE,EAAA,WAAW,GAAG,GAAhB;AAAqB,EAAA,cAAc,GAAG,IAAtC;AAA4C,EAAA;AAA5C,CAAD,KAAyJ;AAEvK,QAAM,CAAC,UAAD,IAAe,WAAW,EAAhC;AAEA,QAAM,QAAQ,GAA2B;AACxC,IAAA,UAAU,EAAE,OAD4B;AAExC;AACA,IAAA,aAAa,EAAE,CACd;AACC,MAAA,QAAQ,EAAE,QAAQ,CAAC,IAAT,CAAc,iBAAd,CAAgC,WAD3C;AAEC,MAAA,cAAc,EAAE;AAFjB,KADc,CAHyB;AASxC,IAAA,SAAS,EAAE;AACV,MAAA,2BAA2B,EAAG,UAAD,IAAe;AAC3C,cAAM,GAAG,GAAG,UAAU,CAAC,IAAX,CAAgB,GAA5B;;AACA,YAAI,GAAJ,EAAS;AACR,WAAC,YAAW;AACX,gBAAI,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAiC,GAAjC,CAAjB;;AACA,gBAAI,CAAC,IAAL,EAAW;AACV,cAAA,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAb,CAAkB,GAAlB,CAAP;AACA,cAAA,IAAI,CAAC,OAAL,GAAe,cAAf;AACA,oBAAM,IAAI,CAAC,IAAL,EAAN;AACA;;AACD,YAAA,UAAU,CAAC,SAAD,EAAY,SAAZ,CAAV;;AACA,gBAAI,WAAJ,EAAiB;AAChB,cAAA,MAAM,CAAC,IAAP,CAAY,WAAZ;AACA;;AACD,gBAAI,MAAJ,EAAY;AACX,cAAA,MAAM,CAAC,IAAD,CAAN;AACA;AACD,WAdD;AAeA;;AACD,eAAO,KAAP;AACA,OArBS;AAsBV,MAAA,aAAa,EAAE,MAAO,KAAP,IAAgB;AAC9B,QAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA;AAxBS;AAT6B,GAAzC;AAqCA,SAAO,MAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAE,QAA9B;AAAwC,IAAA,YAAY,EAAE,QAAQ,CAAC,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,CA1CD","sourcesContent":["import React from 'react'\r\nimport Router from 'next/router'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from 'firebase'\r\nimport * as Commerce from 'models/commerce'\r\nimport { CountryCode } from 'common/Country'\r\nimport { useSnackbar } from 'components/Snackbar'\r\n\r\nexport default ({ redirectURL = '/', defaultCountry = 'JP', onNext }: { redirectURL?: string, defaultCountry?: CountryCode, onNext?: (user: Commerce.User) => void }) => {\r\n\r\n\tconst [setMessage] = useSnackbar()\r\n\r\n\tconst uiConfig: firebaseui.auth.Config = {\r\n\t\tsignInFlow: 'popup',\r\n\t\t// signInSuccessUrl: redirectURL,\r\n\t\tsignInOptions: [\r\n\t\t\t{\r\n\t\t\t\tprovider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n\t\t\t\tdefaultCountry: defaultCountry\r\n\t\t\t}\r\n\t\t],\r\n\t\tcallbacks: {\r\n\t\t\tsignInSuccessWithAuthResult: (authResult) => {\r\n\t\t\t\tconst uid = authResult.user.uid\r\n\t\t\t\tif (uid) {\r\n\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\tlet user = await Commerce.User.get<Commerce.User>(uid)\r\n\t\t\t\t\t\tif (!user) {\r\n\t\t\t\t\t\t\tuser = new Commerce.User(uid)\r\n\t\t\t\t\t\t\tuser.country = defaultCountry\r\n\t\t\t\t\t\t\tawait user.save()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetMessage('success', `Welcome`)\r\n\t\t\t\t\t\tif (redirectURL) {\r\n\t\t\t\t\t\t\tRouter.push(redirectURL)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (onNext) {\r\n\t\t\t\t\t\t\tonNext(user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t},\r\n\t\t\tsignInFailure: async (error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}