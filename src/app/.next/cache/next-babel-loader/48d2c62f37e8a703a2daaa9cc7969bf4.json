{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/Processing.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useContext, useState } from 'react';\nimport { CircularProgress, Box } from '@material-ui/core';\n\nvar Processing = (_ref) => {\n  var {\n    isProcessing\n  } = _ref;\n\n  if (isProcessing) {\n    return __jsx(Box, {\n      zIndex: \"tooltip\",\n      position: \"fixed\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      style: {\n        background: 'rgba(0, 0, 0, 0.2)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }\n    }, __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null);\n};\n\n_c = Processing;\nexport var ProcessingContext = createContext([() => {}, false]);\nexport var ProcessingProvider = (_ref2) => {\n  _s();\n\n  var {\n    children\n  } = _ref2;\n  var {\n    0: isProcessing,\n    1: setProcessing\n  } = useState(false);\n  return __jsx(ProcessingContext.Provider, {\n    value: [setProcessing, isProcessing],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(Processing, {\n    isProcessing: isProcessing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }), children);\n};\n\n_s(ProcessingProvider, \"I1DT/cdCBjDkVlduWjLgNoGj8sM=\");\n\n_c2 = ProcessingProvider;\nexport var useProcessing = () => {\n  _s2();\n\n  return useContext(ProcessingContext);\n};\n\n_s2(useProcessing, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Processing\");\n$RefreshReg$(_c2, \"ProcessingProvider\");","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/Processing.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,KAAP,IAAgB,aAAhB,EAA+B,UAA/B,EAA2C,QAA3C,QAA2D,OAA3D;AACA,SAAS,gBAAT,EAA2B,GAA3B,QAAsC,mBAAtC;;AAEA,IAAM,UAAU,GAAG,UAAgD;AAAA,MAA/C;AAAE,IAAA;AAAF,GAA+C;;AAClE,MAAI,YAAJ,EAAkB;AACjB,WACC,MAAC,GAAD;AACC,MAAA,MAAM,EAAC,SADR;AAEC,MAAA,QAAQ,EAAC,OAFV;AAGC,MAAA,OAAO,EAAC,MAHT;AAIC,MAAA,cAAc,EAAC,QAJhB;AAKC,MAAA,UAAU,EAAC,QALZ;AAMC,MAAA,GAAG,EAAE,CANN;AAOC,MAAA,MAAM,EAAE,CAPT;AAQC,MAAA,IAAI,EAAE,CARP;AASC,MAAA,KAAK,EAAE,CATR;AAUC,MAAA,KAAK,EAAE;AACN,QAAA,UAAU,EAAE;AADN,OAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeC,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,CADD;AAmBA;;AACD,SAAO,2BAAP;AACA,CAvBD;;KAAM,U;AAyBN,OAAO,IAAM,iBAAiB,GAAG,aAAa,CAA2C,CAAC,MAAK,CAAI,CAAV,EAAY,KAAZ,CAA3C,CAAvC;AACP,OAAO,IAAM,kBAAkB,GAAG,WAAoC;AAAA;;AAAA,MAAnC;AAAE,IAAA;AAAF,GAAmC;AACrE,MAAM;AAAA,OAAC,YAAD;AAAA,OAAe;AAAf,MAAgC,QAAQ,CAAC,KAAD,CAA9C;AACA,SACC,MAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,YAAhB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,UAAD;AAAY,IAAA,YAAY,EAAE,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEE,QAFF,CADD;AAMA,CARM;;GAAM,kB;;MAAA,kB;AAUb,OAAO,IAAM,aAAa,GAAG,MAAK;AAAA;;AACjC,SAAO,UAAU,CAAC,iBAAD,CAAjB;AACA,CAFM;;IAAM,a","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\r\nimport { CircularProgress, Box } from '@material-ui/core'\r\n\r\nconst Processing = ({ isProcessing }: { isProcessing: boolean }) => {\r\n\tif (isProcessing) {\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\tzIndex='tooltip'\r\n\t\t\t\tposition='fixed'\r\n\t\t\t\tdisplay='flex'\r\n\t\t\t\tjustifyContent='center'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\ttop={0}\r\n\t\t\t\tbottom={0}\r\n\t\t\t\tleft={0}\r\n\t\t\t\tright={0}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground: 'rgba(0, 0, 0, 0.2)',\r\n\t\t\t\t\t// backdropFilter: 'blur(2px)'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CircularProgress />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n\treturn <></>\r\n}\r\n\r\nexport const ProcessingContext = createContext<[(processing: boolean) => void, boolean]>([() => { }, false])\r\nexport const ProcessingProvider = ({ children }: { children: any }) => {\r\n\tconst [isProcessing, setProcessing] = useState(false)\r\n\treturn (\r\n\t\t<ProcessingContext.Provider value={[setProcessing, isProcessing]}>\r\n\t\t\t<Processing isProcessing={isProcessing} />\r\n\t\t\t{children}\r\n\t\t</ProcessingContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useProcessing = () => {\r\n\treturn useContext(ProcessingContext)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}