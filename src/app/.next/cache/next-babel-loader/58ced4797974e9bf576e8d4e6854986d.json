{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/account/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/functions';\nimport List from '@material-ui/core/List';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport StorefrontIcon from '@material-ui/icons/Storefront';\nimport IconButton from '@material-ui/core/IconButton';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport { Container } from '@material-ui/core';\nimport { useDataSourceListen, useDocumentListen } from 'hooks/firestore';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport Provider, { Role } from 'models/commerce/Provider';\nimport DataLoading from 'components/DataLoading';\nimport { Paper, Grid } from '@material-ui/core';\nimport { useDialog } from 'components/Dialog';\nimport { useProcessing } from 'components/Processing';\nimport { useModal } from 'components/Modal';\nimport { useUser } from 'hooks/commerce';\nimport { useAccount } from 'hooks/account';\nimport Account from 'models/account/Account';\nimport Login from 'components/Login';\nexport default (() => {\n  const [account, isAccountLoading] = useAccount();\n  const history = useHistory();\n  const [setProgress] = useProcessing();\n  const [setDialog] = useDialog();\n  const [setModal, close] = useModal();\n  return __jsx(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    component: Link,\n    to: `/account/orders`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(ViewListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Purchase history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    disabled: isAccountLoading,\n    onClick: () => {\n      const currentUser = firebase.auth().currentUser;\n\n      if (currentUser) {\n        if (account) {\n          history.push('/account/payments');\n        } else {\n          history.push('/account/create');\n        }\n      } else {\n        setDialog('Welcome ðŸŽ‰', 'We support your business. Please log in first.', [{\n          title: 'OK',\n          handler: () => {\n            setModal(__jsx(Login, {\n              onNext: async user => {\n                setProgress(true);\n\n                try {\n                  const account = await Account.get(user.id);\n\n                  if (!account) {\n                    setProgress(false);\n                    close();\n                    history.push('/account/create');\n                  }\n                } catch (error) {\n                  setProgress(false);\n                  close();\n                  history.push('/account/create');\n                  console.error(error);\n                }\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 34\n              }\n            }));\n          }\n        }]);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(AccountBoxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  })), __jsx(ListItemText, {\n    primary: account ? 'Account' : 'Create new account',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, isAccountLoading && __jsx(CircularProgress, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 31\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, __jsx(ProviderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }, __jsx(MeetingRoomIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), __jsx(ListItemText, {\n    primary: \"SignOut\",\n    color: \"text.secondary\",\n    onClick: async () => {\n      await firebase.auth().signOut();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }))))));\n});\n\nconst ProviderList = () => {\n  const history = useHistory();\n  const [user, isLoading] = useUser();\n  const ref = user === null || user === void 0 ? void 0 : user.providers.collectionReference;\n  const [roles, isDataLoading] = useDataSourceListen(Role, {\n    path: ref === null || ref === void 0 ? void 0 : ref.path\n  }, isLoading);\n  const [setDialog] = useDialog();\n  const [setModal, close] = useModal();\n\n  if (isDataLoading) {\n    return __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (roles.length === 0) {\n    return __jsx(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, __jsx(ListItem, {\n      button: true,\n      onClick: () => {\n        const currentUser = firebase.auth().currentUser;\n\n        if (currentUser) {\n          history.push('/provider/create');\n        } else {\n          setDialog('Welcome ðŸŽ‰', 'We support your business. Please log in first.', [{\n            title: 'OK',\n            handler: () => {\n              setModal(__jsx(Login, {\n                onNext: () => {\n                  close();\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 38\n                }\n              }));\n            }\n          }]);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, __jsx(StorefrontIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    })), __jsx(ListItemText, {\n      primary: 'Add your Shop',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 6\n      }\n    })));\n  }\n\n  return __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, roles.map(role => {\n    return __jsx(ProviderListItem, {\n      role: role,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nconst ProviderListItem = ({\n  role\n}) => {\n  const history = useHistory();\n  const [provider, isLoading] = useDocumentListen(Provider, new Provider(role.id).documentReference);\n  const [setDialog] = useDialog();\n  const [setProcessing] = useProcessing();\n\n  if (isLoading) {\n    return __jsx(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ListItem, {\n    button: true,\n    component: Link,\n    to: `/providers/${role.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, __jsx(StorefrontIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 6\n    }\n  })), __jsx(ListItemText, {\n    primary: provider.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }), __jsx(ListItemSecondaryAction, {\n    onClick: async () => {\n      setProcessing(true);\n      const adminAttach = firebase.functions().httpsCallable('v1-commerce-admin-attach');\n\n      try {\n        await adminAttach({\n          providerID: provider.id\n        });\n        history.push('/admin');\n      } catch (error) {\n        setDialog('Error', 'Error', [{\n          title: 'OK'\n        }]);\n        console.error(error);\n      }\n\n      setProcessing(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 6\n    }\n  }, __jsx(SettingsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/account/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\nimport List from '@material-ui/core/List';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport { Container } from '@material-ui/core'\r\nimport { useDataSourceListen, useDocumentListen } from 'hooks/firestore';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport Provider, { Role } from 'models/commerce/Provider';\r\nimport DataLoading from 'components/DataLoading';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport { useDialog } from 'components/Dialog'\r\nimport { useProcessing } from 'components/Processing';\r\nimport { useModal } from 'components/Modal'\r\nimport { useUser } from 'hooks/commerce'\r\nimport { useAccount } from 'hooks/account'\r\nimport Account from 'models/account/Account'\r\nimport Login from 'components/Login';\r\n\r\nexport default () => {\r\n\r\n\tconst [account, isAccountLoading] = useAccount()\r\n\tconst history = useHistory()\r\n\tconst [setProgress] = useProcessing()\r\n\tconst [setDialog] = useDialog()\r\n\tconst [setModal, close] = useModal()\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='sm'>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to={`/account/orders`}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ViewListIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary='Purchase history' />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button disabled={isAccountLoading} onClick={() => {\r\n\t\t\t\t\t\t\t\tconst currentUser = firebase.auth().currentUser\r\n\t\t\t\t\t\t\t\tif (currentUser) {\r\n\t\t\t\t\t\t\t\t\tif (account) {\r\n\t\t\t\t\t\t\t\t\t\thistory.push('/account/payments')\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\thistory.push('/account/create')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetDialog('Welcome ðŸŽ‰', 'We support your business. Please log in first.', [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'OK',\r\n\t\t\t\t\t\t\t\t\t\t\thandler: () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetModal(<Login onNext={async (user) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetProgress(true)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst account = await Account.get<Account>(user.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!account) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetProgress(false)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/account/create')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetProgress(false)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/account/create')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.error(error)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}} />)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<AccountBoxIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={account ? 'Account' : 'Create new account'} />\r\n\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t\t{isAccountLoading && <CircularProgress size={20} />}\r\n\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t<ProviderList />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<MeetingRoomIcon />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary='SignOut' color='text.secondary' onClick={async () => {\r\n\t\t\t\t\t\t\t\tawait firebase.auth().signOut()\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\n\r\nconst ProviderList = () => {\r\n\tconst history = useHistory()\r\n\tconst [user, isLoading] = useUser()\r\n\tconst ref = user?.providers.collectionReference\r\n\tconst [roles, isDataLoading] = useDataSourceListen<Role>(Role, { path: ref?.path }, isLoading)\r\n\tconst [setDialog] = useDialog()\r\n\tconst [setModal, close] = useModal()\r\n\r\n\tif (isDataLoading) {\r\n\t\treturn <DataLoading />\r\n\t}\r\n\r\n\tif (roles.length === 0) {\r\n\t\treturn (\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem button onClick={() => {\r\n\t\t\t\t\tconst currentUser = firebase.auth().currentUser\r\n\t\t\t\t\tif (currentUser) {\r\n\t\t\t\t\t\thistory.push('/provider/create')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetDialog('Welcome ðŸŽ‰', 'We support your business. Please log in first.', [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: 'OK',\r\n\t\t\t\t\t\t\t\thandler: () => {\r\n\t\t\t\t\t\t\t\t\tsetModal(<Login onNext={() => {\r\n\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t}} />)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t])\r\n\t\t\t\t\t}\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<StorefrontIcon />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary={'Add your Shop'} />\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{roles.map(role => {\r\n\t\t\t\treturn <ProviderListItem role={role} />\r\n\t\t\t})}\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nconst ProviderListItem = ({ role }: { role: Role }) => {\r\n\tconst history = useHistory()\r\n\tconst [provider, isLoading] = useDocumentListen<Provider>(Provider, new Provider(role.id).documentReference)\r\n\tconst [setDialog] = useDialog()\r\n\tconst [setProcessing] = useProcessing()\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<ListItem>\r\n\t\t\t\t<DataLoading />\r\n\t\t\t</ListItem>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListItem button component={Link} to={`/providers/${role.id}`}>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<StorefrontIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText primary={provider!.name} />\r\n\t\t\t\t<ListItemSecondaryAction onClick={async () => {\r\n\t\t\t\t\tsetProcessing(true)\r\n\t\t\t\t\tconst adminAttach = firebase.functions().httpsCallable('v1-commerce-admin-attach')\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait adminAttach({ providerID: provider!.id })\r\n\t\t\t\t\t\thistory.push('/admin')\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tsetDialog('Error', 'Error', [{\r\n\t\t\t\t\t\t\ttitle: 'OK'\r\n\t\t\t\t\t\t}])\r\n\t\t\t\t\t\tconsole.error(error)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetProcessing(false)\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItem>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}