{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Doc, Field, firestore } from '@1amageek/ballcap';\n\nlet Account =\n/** @class */\n(() => {\n  class Account extends Doc {\n    constructor() {\n      super(...arguments);\n      this.country = 'US';\n      this.defaultCurrency = 'USD';\n      this.businessType = 'individual';\n      this.isRejected = false;\n      this.isSigned = false;\n      this.hasLegalEntity = false;\n      this.commissionRate = 10;\n      this.balance = 0;\n      this.metadata = {};\n    }\n\n    static collectionReference() {\n      return firestore.collection('account/v1/accounts');\n    }\n\n  }\n\n  __decorate([Field], Account.prototype, \"accountID\", void 0);\n\n  __decorate([Field], Account.prototype, \"country\", void 0);\n\n  __decorate([Field], Account.prototype, \"defaultCurrency\", void 0);\n\n  __decorate([Field], Account.prototype, \"businessType\", void 0);\n\n  __decorate([Field], Account.prototype, \"company\", void 0);\n\n  __decorate([Field], Account.prototype, \"individual\", void 0);\n\n  __decorate([Field], Account.prototype, \"email\", void 0);\n\n  __decorate([Field], Account.prototype, \"isRejected\", void 0);\n\n  __decorate([Field], Account.prototype, \"isSigned\", void 0);\n\n  __decorate([Field], Account.prototype, \"hasLegalEntity\", void 0);\n\n  __decorate([Field], Account.prototype, \"commissionRate\", void 0);\n\n  __decorate([Field], Account.prototype, \"balance\", void 0);\n\n  __decorate([Field], Account.prototype, \"metadata\", void 0);\n\n  return Account;\n})();\n\nexport default Account;","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/models/account/Account.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,GAAT,EAAc,KAAd,EAAqB,SAArB,QAA2D,mBAA3D;;AAIA,IAAA,OAAA;AAAA;AAAA,CAAA,MAAA;AAAA,QAAqB,OAArB,SAAqC,GAArC,CAAwC;AAAxC,IAAA,WAAA,GAAA;;AAOQ,WAAA,OAAA,GAAkB,IAAlB;AACA,WAAA,eAAA,GAAgC,KAAhC;AACA,WAAA,YAAA,GAA6B,YAA7B;AAIA,WAAA,UAAA,GAAsB,KAAtB;AACA,WAAA,QAAA,GAAoB,KAApB;AACA,WAAA,cAAA,GAA0B,KAA1B;AACA,WAAA,cAAA,GAAyB,EAAzB;AACA,WAAA,OAAA,GAAkB,CAAlB;AACA,WAAA,QAAA,GAAoC,EAApC;AACP;;AAjBA,WAAO,mBAAP,GAA0B;AACzB,aAAO,SAAS,CAAC,UAAV,CAAqB,qBAArB,CAAP;AACA;;AAJsC;;AAMhC,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,WAAA,E,KAAkB,CAAlB,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,SAAA,E,KAAsB,CAAtB,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,iBAAA,E,KAAqC,CAArC,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,cAAA,E,KAAyC,CAAzC,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,SAAA,E,KAAgC,CAAhC,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,YAAA,E,KAAmC,CAAnC,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,YAAA,E,KAA2B,CAA3B,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,UAAA,E,KAAyB,CAAzB,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,gBAAA,E,KAA+B,CAA/B,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,gBAAA,E,KAA2B,CAA3B,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,SAAA,E,KAAmB,CAAnB,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,iBAAA,E,UAAA,E,KAAsC,CAAtC,CAAA;;AACR,SAAA,OAAA;AAAC,CAnBD,GAAA;;eAAqB,O","sourcesContent":["import { Doc, Field, firestore, CollectionReference } from '@1amageek/ballcap'\r\nimport { BusinessType } from 'common/commerce/account'\r\nimport { CurrencyCode } from 'common/Currency'\r\n\r\nexport default class Account extends Doc {\r\n\r\n\tstatic collectionReference(): CollectionReference {\r\n\t\treturn firestore.collection('account/v1/accounts')\r\n\t}\r\n\r\n\t@Field accountID!: string\r\n\t@Field country: string = 'US'\r\n\t@Field defaultCurrency: CurrencyCode = 'USD'\r\n\t@Field businessType: BusinessType = 'individual'\r\n\t@Field company?: { [key: string]: any }\r\n\t@Field individual?: { [key: string]: any }\r\n\t@Field email!: string\r\n\t@Field isRejected: boolean = false\r\n\t@Field isSigned: boolean = false\r\n\t@Field hasLegalEntity: boolean = false\r\n\t@Field commissionRate: number = 10\r\n\t@Field balance: number = 0\r\n\t@Field metadata?: { [key: string]: any } = {}\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}