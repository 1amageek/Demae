{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { firestore, Doc, Model, Field, Codable } from '@1amageek/ballcap';\nimport Shipping from './Shipping';\nimport Order, { OrderItem } from './Order';\n\nlet Deliverable =\n/** @class */\n(() => {\n  class Deliverable extends Model {}\n\n  __decorate([Field], Deliverable.prototype, \"shippingDate\", void 0);\n\n  __decorate([Field], Deliverable.prototype, \"estimatedArrivalDate\", void 0);\n\n  __decorate([Codable(Shipping), Field], Deliverable.prototype, \"shipping\", void 0);\n\n  return Deliverable;\n})();\n\nlet CartItem =\n/** @class */\n(() => {\n  class CartItem extends Deliverable {\n    constructor() {\n      super(...arguments);\n      this.images = [];\n      this.quantity = 1;\n      this.currency = 'USD';\n      this.amount = 0;\n      this.taxRate = 0;\n      this.category = '';\n      this.name = '';\n    }\n\n    imageURLs() {\n      return this.images.map(image => {\n        if (image) {\n          return `${process.env.HOST}/assets/${image.path}`;\n        }\n\n        return undefined;\n      }).filter(value => !!value);\n    }\n\n    price() {\n      return this.amount;\n    }\n\n    subtotal() {\n      if (this.discount) {\n        if (this.discount.type === 'rate') {\n          return this.amount - Math.floor(this.amount * this.discount.rate);\n        } else {\n          return Math.max(this.amount - this.discount.amount, 0);\n        }\n      }\n\n      return this.amount * this.quantity;\n    }\n\n    tax() {\n      return Math.floor(this.subtotal() * this.taxRate / 100);\n    }\n\n    taxRates() {\n      return [this.taxRate];\n    }\n\n    taxes() {\n      return [{\n        taxRate: this.taxRate,\n        total: this.tax()\n      }];\n    }\n\n    total() {\n      return this.subtotal() + this.tax();\n    }\n\n    static fromSKU(product, sku) {\n      const cartItem = new CartItem();\n      const images = sku.images.length > 0 ? sku.images : product.images;\n      cartItem.images = images;\n      cartItem.providedBy = sku.providedBy;\n      cartItem.productType = product.type;\n      cartItem.productReference = sku.productReference;\n      cartItem.skuReference = sku.documentReference;\n      cartItem.caption = sku.caption;\n      cartItem.description = sku.description;\n      cartItem.currency = sku.currency;\n      cartItem.amount = sku.price;\n      cartItem.discount = sku.discount;\n      cartItem.name = sku.name;\n      cartItem.taxRate = sku.taxRate;\n      cartItem.quantity = 1;\n      return cartItem;\n    }\n\n  }\n\n  __decorate([Field], CartItem.prototype, \"providedBy\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"images\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"productType\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"productReference\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"skuReference\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"quantity\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"currency\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"amount\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"discount\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"taxRate\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"category\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"name\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"caption\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"description\", void 0);\n\n  __decorate([Field], CartItem.prototype, \"metadata\", void 0);\n\n  return CartItem;\n})();\n\nexport { CartItem };\n\nlet CartGroup =\n/** @class */\n(() => {\n  class CartGroup extends Model {\n    constructor() {\n      super(...arguments);\n      this.items = [];\n      this.currency = 'USD';\n      this.shippable = false;\n    }\n\n    price() {\n      return this.items.reduce((prev, current) => {\n        return prev + current.price();\n      }, 0);\n    }\n\n    subtotal() {\n      return this.items.reduce((prev, current) => {\n        return prev + current.subtotal();\n      }, 0);\n    }\n\n    tax() {\n      return this.items.reduce((prev, current) => {\n        return prev + current.tax();\n      }, 0);\n    }\n\n    taxRates() {\n      const taxes = this.items.reduce((prev, current) => {\n        return prev.concat(current.taxRates());\n      }, []);\n      return Array.from(new Set(taxes));\n    }\n\n    taxes() {\n      return this.taxRates().map(taxRate => {\n        const tatal = this.items.reduce((prev, current) => {\n          const tax = current.taxes().find(item => item.taxRate === taxRate);\n          return prev + ((tax === null || tax === void 0 ? void 0 : tax.total) || 0);\n        }, 0);\n        return {\n          taxRate: taxRate,\n          total: tatal\n        };\n      });\n    }\n\n    total() {\n      return this.subtotal() + this.tax();\n    }\n\n    static fromSKU(sku) {\n      const group = new CartGroup();\n      group.providedBy = sku.providedBy;\n      group.currency = sku.currency;\n      return group;\n    }\n\n    order(purchasedBy) {\n      const items = this.items.map(item => {\n        const orderItem = new OrderItem();\n        orderItem.images = item.images;\n        orderItem.name = item.name;\n        orderItem.productReference = item.productReference;\n        orderItem.skuReference = item.skuReference;\n        orderItem.productType = item.productType;\n        orderItem.quantity = item.quantity;\n        orderItem.currency = item.currency;\n        orderItem.discount = item.discount;\n        orderItem.taxRate = item.taxRate;\n        orderItem.category = item.category;\n        orderItem.description = item.description;\n        orderItem.metadata = item.metadata;\n        orderItem.status = 'none';\n        return orderItem;\n      });\n      const order = new Order();\n      order.purchasedBy = purchasedBy;\n      order.providedBy = this.providedBy;\n      order.title = `${items.map(item => item.name).join(', ')}`;\n      order.shipping = this.shipping;\n      order.shippingDate = this.shippingDate;\n      order.estimatedArrivalDate = this.estimatedArrivalDate;\n      order.currency = this.currency;\n      order.amount = this.total();\n      order.items = items;\n      order.deliveryRequired = this.shippable;\n      order.deliveryStatus = 'none';\n      order.paymentStatus = 'none';\n      order.isCancelled = false;\n      order.metadata = this.metadata;\n      return order.data({\n        convertDocumentReference: true\n      });\n    }\n\n  }\n\n  __decorate([Field], CartGroup.prototype, \"groupID\", void 0);\n\n  __decorate([Field], CartGroup.prototype, \"providedBy\", void 0);\n\n  __decorate([Codable(CartItem), Field], CartGroup.prototype, \"items\", void 0);\n\n  __decorate([Field], CartGroup.prototype, \"currency\", void 0);\n\n  __decorate([Field], CartGroup.prototype, \"shippable\", void 0);\n\n  __decorate([Field], CartGroup.prototype, \"shippingDate\", void 0);\n\n  __decorate([Field], CartGroup.prototype, \"estimatedArrivalDate\", void 0);\n\n  __decorate([Codable(Shipping), Field], CartGroup.prototype, \"shipping\", void 0);\n\n  __decorate([Field], CartGroup.prototype, \"metadata\", void 0);\n\n  return CartGroup;\n})();\n\nexport { CartGroup };\n\nlet Cart =\n/** @class */\n(() => {\n  class Cart extends Doc {\n    constructor() {\n      super(...arguments);\n      this.currency = 'USD';\n      this.amount = 0;\n      this.groups = [];\n    }\n\n    static collectionReference() {\n      return firestore.collection('commerce/v1/carts');\n    }\n\n    items() {\n      return this.groups.reduce((prev, group) => {\n        return prev.concat(group.items);\n      }, []);\n    }\n\n    price() {\n      return this.groups.reduce((prev, current) => {\n        return prev + current.price();\n      }, 0);\n    }\n\n    subtotal() {\n      return this.groups.reduce((prev, current) => {\n        return prev + current.subtotal();\n      }, 0);\n    }\n\n    tax() {\n      return this.groups.reduce((prev, current) => {\n        return prev + current.tax();\n      }, 0);\n    }\n\n    taxRates() {\n      const taxes = this.groups.reduce((prev, current) => {\n        return prev.concat(current.taxRates());\n      }, []);\n      return Array.from(new Set(taxes));\n    }\n\n    taxes() {\n      return this.taxRates().map(taxRate => {\n        const tatal = this.groups.reduce((prev, current) => {\n          const tax = current.taxes().find(item => item.taxRate === taxRate);\n          return prev + ((tax === null || tax === void 0 ? void 0 : tax.total) || 0);\n        }, 0);\n        return {\n          taxRate: taxRate,\n          total: tatal\n        };\n      });\n    }\n\n    total() {\n      return this.subtotal() + this.tax();\n    }\n\n    setSKU(product, sku, groupID) {\n      if (product.providedBy !== sku.providedBy) return;\n      const group = CartGroup.fromSKU(sku);\n      group.groupID = groupID;\n      this.groups = [group];\n      group.shippable = group.shippable || product.shippable;\n\n      if (group.currency !== null && group.currency !== sku.currency) {\n        console.log(`[APP] invalid currency. The cart now contains ${group.currency}, but the added item is ${sku.currency}.`);\n        return;\n      }\n\n      const cartItem = CartItem.fromSKU(product, sku);\n      group.items = [cartItem];\n    }\n\n    addSKU(product, sku, groupID) {\n      if (product.providedBy !== sku.providedBy) return;\n      let group = this.groups.find(group => group.groupID === groupID);\n\n      if (!group) {\n        group = CartGroup.fromSKU(sku);\n        group.groupID = groupID;\n        this.groups.push(group);\n      }\n\n      group.shippable = group.shippable || product.shippable;\n\n      if (group.currency !== null && group.currency !== sku.currency) {\n        console.log(`[APP] invalid currency. The cart now contains ${group.currency}, but the added item is ${sku.currency}.`);\n        return;\n      }\n\n      const cartItem = group.items.find(value => value.skuReference.path == sku.path);\n\n      if (cartItem) {\n        cartItem.quantity += 1;\n      } else {\n        const cartItem = CartItem.fromSKU(product, sku);\n        group.items.push(cartItem);\n      }\n    }\n\n    deleteSKU(sku, groupID) {\n      const group = this.groups.find(group => group.groupID === groupID);\n      if (!group) return;\n      const cartItem = group.items.find(value => value.skuReference.path == sku.path);\n\n      if (cartItem) {\n        cartItem.quantity -= 1;\n\n        if (cartItem.quantity <= 0) {\n          cartItem.quantity = 0;\n          group.items = group.items.filter(item => item.skuReference.path !== sku.path);\n        }\n      } else {\n        group.items = group.items.filter(item => item.skuReference.path !== sku.path);\n      }\n\n      if (group.items.length <= 0) {\n        this.groups = this.groups.filter(group => group.providedBy !== sku.providedBy);\n      }\n    }\n\n    addItem(item, groupID) {\n      const group = this.groups.find(group => group.groupID === groupID);\n      if (!group) return;\n      const cartItem = group.items.find(value => value.skuReference.path == item.skuReference.path);\n\n      if (cartItem) {\n        cartItem.quantity += 1;\n      } else {\n        group.items.push(item);\n      }\n    }\n\n    subtractItem(item, groupID) {\n      const group = this.groups.find(group => group.groupID === groupID);\n      if (!group) return;\n      const cartItem = group.items.find(value => value.skuReference.path == item.skuReference.path);\n\n      if (cartItem) {\n        cartItem.quantity -= 1;\n\n        if (cartItem.quantity == 0) {\n          this.deleteItem(item, groupID);\n        }\n      } else {\n        group.items.push(item);\n      }\n\n      if (group.items.length <= 0) {\n        this.groups = this.groups.filter(group => group.groupID !== groupID);\n      }\n    }\n\n    deleteItem(item, groupID) {\n      const group = this.groups.find(group => group.groupID === groupID);\n      if (!group) return;\n      group.items = group.items.filter(value => value.skuReference.path !== item.skuReference.path);\n    }\n\n    cartGroup(groupID) {\n      return this.groups.find(group => group.groupID === groupID);\n    }\n\n    order(group) {\n      return group.order(this.id);\n    }\n\n  }\n\n  __decorate([Field], Cart.prototype, \"purchasedBy\", void 0);\n\n  __decorate([Field], Cart.prototype, \"currency\", void 0);\n\n  __decorate([Field], Cart.prototype, \"amount\", void 0);\n\n  __decorate([Codable(Shipping), Field], Cart.prototype, \"shipping\", void 0);\n\n  __decorate([Codable(CartGroup), Field], Cart.prototype, \"groups\", void 0);\n\n  __decorate([Field], Cart.prototype, \"metadata\", void 0);\n\n  return Cart;\n})();\n\nexport default Cart;","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/models/commerce/Cart.ts"],"names":[],"mappings":"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","sourcesContent":["import { firestore, Doc, Model, Field, File, DocumentReference, CollectionReference, Codable } from '@1amageek/ballcap'\r\nimport { CurrencyCode, Symbol } from 'common/Currency'\r\nimport { Discount, ProductType } from 'common/commerce/Types'\r\nimport Shipping from './Shipping'\r\nimport SKU from './SKU'\r\nimport Product from './Product'\r\nimport Order, { OrderItem } from './Order'\r\n\r\n\r\ninterface TotalTax {\r\n\ttaxRate: number\r\n\ttotal: number\r\n}\r\n\r\ninterface Accounting {\r\n\r\n\t// Price per item\r\n\tprice(): number\r\n\r\n\t// Total price not tax included\r\n\tsubtotal(): number\r\n\r\n\t// subtotal * taxRate\r\n\ttax(): number\r\n\r\n\t// Kind of tax rates\r\n\ttaxRates(): number[]\r\n\r\n\t// total tax for tax rate\r\n\ttaxes(): TotalTax[]\r\n\r\n\t// Total price tax included\r\n\ttotal(): number\r\n}\r\n\r\nclass Deliverable extends Model {\r\n\t@Field shippingDate?: any\r\n\t@Field estimatedArrivalDate?: any\r\n\t@Codable(Shipping)\r\n\t@Field shipping?: Shipping\r\n}\r\n\r\nexport class CartItem extends Deliverable implements Accounting {\r\n\t@Field providedBy!: string\r\n\t@Field images: File[] = []\r\n\t@Field productType?: ProductType\r\n\t@Field productReference?: DocumentReference\r\n\t@Field skuReference?: DocumentReference\r\n\t@Field quantity: number = 1\r\n\t@Field currency: CurrencyCode = 'USD'\r\n\t@Field amount: number = 0\r\n\t@Field discount?: Discount\r\n\t@Field taxRate: number = 0\r\n\t@Field category: string = ''\r\n\t@Field name: string = ''\r\n\t@Field caption?: string\r\n\t@Field description?: string\r\n\t@Field metadata?: any\r\n\r\n\timageURLs() {\r\n\t\treturn this.images.map(image => {\r\n\t\t\tif (image) {\r\n\t\t\t\treturn `${process.env.HOST}/assets/${image.path}`\r\n\t\t\t}\r\n\t\t\treturn undefined\r\n\t\t}).filter(value => !!value)\r\n\t}\r\n\r\n\tprice() {\r\n\t\treturn this.amount\r\n\t}\r\n\r\n\tsubtotal() {\r\n\t\tif (this.discount) {\r\n\t\t\tif (this.discount.type === 'rate') {\r\n\t\t\t\treturn this.amount - Math.floor(this.amount * this.discount.rate!)\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.max(this.amount - this.discount.amount!, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.amount * this.quantity\r\n\t}\r\n\r\n\ttax() {\r\n\t\treturn Math.floor(this.subtotal() * this.taxRate / 100)\r\n\t}\r\n\r\n\ttaxRates() {\r\n\t\treturn [this.taxRate]\r\n\t}\r\n\r\n\ttaxes() {\r\n\t\treturn [{ taxRate: this.taxRate, total: this.tax() }]\r\n\t}\r\n\r\n\ttotal() {\r\n\t\treturn this.subtotal() + this.tax()\r\n\t}\r\n\r\n\tstatic fromSKU(product: Product, sku: SKU) {\r\n\t\tconst cartItem: CartItem = new CartItem()\r\n\t\tconst images = sku.images.length > 0 ? sku.images : product.images\r\n\t\tcartItem.images = images\r\n\t\tcartItem.providedBy = sku.providedBy\r\n\t\tcartItem.productType = product.type\r\n\t\tcartItem.productReference = sku.productReference\r\n\t\tcartItem.skuReference = sku.documentReference\r\n\t\tcartItem.caption = sku.caption\r\n\t\tcartItem.description = sku.description\r\n\t\tcartItem.currency = sku.currency\r\n\t\tcartItem.amount = sku.price\r\n\t\tcartItem.discount = sku.discount\r\n\t\tcartItem.name = sku.name\r\n\t\tcartItem.taxRate = sku.taxRate\r\n\t\tcartItem.quantity = 1\r\n\t\treturn cartItem\r\n\t}\r\n}\r\n\r\nexport class CartGroup extends Model implements Accounting {\r\n\t@Field groupID!: string\r\n\t@Field providedBy!: string\r\n\t@Codable(CartItem)\r\n\t@Field items: CartItem[] = []\r\n\t@Field currency: CurrencyCode = 'USD'\r\n\t@Field shippable: boolean = false\r\n\t@Field shippingDate?: any\r\n\t@Field estimatedArrivalDate?: any\r\n\r\n\t@Codable(Shipping)\r\n\t@Field shipping?: Shipping\r\n\t@Field metadata?: any\r\n\r\n\tprice() {\r\n\t\treturn this.items.reduce((prev, current) => {\r\n\t\t\treturn prev + current.price()\r\n\t\t}, 0)\r\n\t}\r\n\r\n\tsubtotal() {\r\n\t\treturn this.items.reduce((prev, current) => {\r\n\t\t\treturn prev + current.subtotal()\r\n\t\t}, 0)\r\n\t}\r\n\r\n\ttax() {\r\n\t\treturn this.items.reduce((prev, current) => {\r\n\t\t\treturn prev + current.tax()\r\n\t\t}, 0)\r\n\t}\r\n\r\n\ttaxRates() {\r\n\t\tconst taxes = this.items.reduce<number[]>((prev, current) => {\r\n\t\t\treturn prev.concat(current.taxRates())\r\n\t\t}, [])\r\n\t\treturn Array.from(new Set(taxes))\r\n\t}\r\n\r\n\ttaxes() {\r\n\t\treturn this.taxRates().map(taxRate => {\r\n\t\t\tconst tatal = this.items.reduce((prev, current) => {\r\n\t\t\t\tconst tax = current.taxes().find(item => item.taxRate === taxRate)\r\n\t\t\t\treturn prev + (tax?.total || 0)\r\n\t\t\t}, 0)\r\n\t\t\treturn { taxRate: taxRate, total: tatal }\r\n\t\t})\r\n\t}\r\n\r\n\ttotal() {\r\n\t\treturn this.subtotal() + this.tax()\r\n\t}\r\n\r\n\tstatic fromSKU(sku: SKU) {\r\n\t\tconst group = new CartGroup()\r\n\t\tgroup.providedBy = sku.providedBy\r\n\t\tgroup.currency = sku.currency\r\n\t\treturn group\r\n\t}\r\n\r\n\torder(purchasedBy: string) {\r\n\t\tconst items = this.items.map(item => {\r\n\t\t\tconst orderItem: OrderItem = new OrderItem()\r\n\t\t\torderItem.images = item.images\r\n\t\t\torderItem.name = item.name\r\n\t\t\torderItem.productReference = item.productReference\r\n\t\t\torderItem.skuReference = item.skuReference\r\n\t\t\torderItem.productType = item.productType\r\n\t\t\torderItem.quantity = item.quantity\r\n\t\t\torderItem.currency = item.currency\r\n\t\t\torderItem.discount = item.discount\r\n\t\t\torderItem.taxRate = item.taxRate\r\n\t\t\torderItem.category = item.category\r\n\t\t\torderItem.description = item.description\r\n\t\t\torderItem.metadata = item.metadata\r\n\t\t\torderItem.status = 'none'\r\n\t\t\treturn orderItem\r\n\t\t})\r\n\t\tconst order: Order = new Order()\r\n\t\torder.purchasedBy = purchasedBy\r\n\t\torder.providedBy = this.providedBy\r\n\t\torder.title = `${items.map(item => item.name).join(', ')}`\r\n\t\torder.shipping = this.shipping\r\n\t\torder.shippingDate = this.shippingDate\r\n\t\torder.estimatedArrivalDate = this.estimatedArrivalDate\r\n\t\torder.currency = this.currency\r\n\t\torder.amount = this.total()\r\n\t\torder.items = items\r\n\t\torder.deliveryRequired = this.shippable\r\n\t\torder.deliveryStatus = 'none'\r\n\t\torder.paymentStatus = 'none'\r\n\t\torder.isCancelled = false\r\n\t\torder.metadata = this.metadata\r\n\t\treturn order.data({ convertDocumentReference: true })\r\n\t}\r\n}\r\n\r\nexport default class Cart extends Doc {\r\n\r\n\tstatic collectionReference(): CollectionReference {\r\n\t\treturn firestore.collection('commerce/v1/carts')\r\n\t}\r\n\r\n\t@Field purchasedBy!: string\r\n\t@Field currency: CurrencyCode = 'USD'\r\n\t@Field amount: number = 0\r\n\t@Codable(Shipping)\r\n\t@Field shipping?: Shipping\r\n\t@Codable(CartGroup)\r\n\t@Field groups: CartGroup[] = []\r\n\t@Field metadata?: any\r\n\r\n\titems() {\r\n\t\treturn this.groups.reduce<CartItem[]>((prev, group) => {\r\n\t\t\treturn prev.concat(group.items)\r\n\t\t}, [])\r\n\t}\r\n\r\n\tprice() {\r\n\t\treturn this.groups.reduce((prev, current) => {\r\n\t\t\treturn prev + current.price()\r\n\t\t}, 0)\r\n\t}\r\n\r\n\tsubtotal() {\r\n\t\treturn this.groups.reduce((prev, current) => {\r\n\t\t\treturn prev + current.subtotal()\r\n\t\t}, 0)\r\n\t}\r\n\r\n\ttax() {\r\n\t\treturn this.groups.reduce((prev, current) => {\r\n\t\t\treturn prev + current.tax()\r\n\t\t}, 0)\r\n\t}\r\n\r\n\ttaxRates() {\r\n\t\tconst taxes = this.groups.reduce<number[]>((prev, current) => {\r\n\t\t\treturn prev.concat(current.taxRates())\r\n\t\t}, [])\r\n\t\treturn Array.from(new Set(taxes))\r\n\t}\r\n\r\n\ttaxes() {\r\n\t\treturn this.taxRates().map(taxRate => {\r\n\t\t\tconst tatal = this.groups.reduce((prev, current) => {\r\n\t\t\t\tconst tax = current.taxes().find(item => item.taxRate === taxRate)\r\n\t\t\t\treturn prev + (tax?.total || 0)\r\n\t\t\t}, 0)\r\n\t\t\treturn { taxRate: taxRate, total: tatal }\r\n\t\t})\r\n\t}\r\n\r\n\ttotal() {\r\n\t\treturn this.subtotal() + this.tax()\r\n\t}\r\n\r\n\tsetSKU(product: Product, sku: SKU, groupID: string) {\r\n\t\tif (product.providedBy !== sku.providedBy) return\r\n\t\tconst group = CartGroup.fromSKU(sku)\r\n\t\tgroup.groupID = groupID\r\n\t\tthis.groups = [group]\r\n\t\tgroup.shippable = group.shippable || product.shippable\r\n\t\tif ((group.currency !== null) && (group.currency !== sku.currency)) {\r\n\t\t\tconsole.log(`[APP] invalid currency. The cart now contains ${group.currency}, but the added item is ${sku.currency}.`)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst cartItem: CartItem = CartItem.fromSKU(product, sku)\r\n\t\tgroup.items = [cartItem]\r\n\t}\r\n\r\n\taddSKU(product: Product, sku: SKU, groupID: string) {\r\n\t\tif (product.providedBy !== sku.providedBy) return\r\n\t\tlet group = this.groups.find(group => group.groupID === groupID)\r\n\t\tif (!group) {\r\n\t\t\tgroup = CartGroup.fromSKU(sku)\r\n\t\t\tgroup.groupID = groupID\r\n\t\t\tthis.groups.push(group)\r\n\t\t}\r\n\t\tgroup.shippable = group.shippable || product.shippable\r\n\t\tif ((group.currency !== null) && (group.currency !== sku.currency)) {\r\n\t\t\tconsole.log(`[APP] invalid currency. The cart now contains ${group.currency}, but the added item is ${sku.currency}.`)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst cartItem = group.items.find(value => value.skuReference!.path == sku.path)\r\n\t\tif (cartItem) {\r\n\t\t\tcartItem.quantity += 1\r\n\t\t} else {\r\n\t\t\tconst cartItem: CartItem = CartItem.fromSKU(product, sku)\r\n\t\t\tgroup.items.push(cartItem)\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteSKU(sku: SKU, groupID: string) {\r\n\t\tconst group = this.groups.find(group => group.groupID === groupID)\r\n\t\tif (!group) return\r\n\t\tconst cartItem = group.items.find(value => value.skuReference!.path == sku.path)\r\n\t\tif (cartItem) {\r\n\t\t\tcartItem.quantity -= 1\r\n\t\t\tif (cartItem.quantity <= 0) {\r\n\t\t\t\tcartItem.quantity = 0\r\n\t\t\t\tgroup.items = group.items.filter(item => item.skuReference!.path !== sku.path)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tgroup.items = group.items.filter(item => item.skuReference!.path !== sku.path)\r\n\t\t}\r\n\t\tif (group.items.length <= 0) {\r\n\t\t\tthis.groups = this.groups.filter(group => group.providedBy !== sku.providedBy)\r\n\t\t}\r\n\t}\r\n\r\n\taddItem(item: CartItem, groupID: string) {\r\n\t\tconst group = this.groups.find(group => group.groupID === groupID)\r\n\t\tif (!group) return\r\n\t\tconst cartItem = group.items.find(value => value.skuReference!.path == item.skuReference!.path)\r\n\t\tif (cartItem) {\r\n\t\t\tcartItem.quantity += 1\r\n\t\t} else {\r\n\t\t\tgroup.items.push(item)\r\n\t\t}\r\n\t}\r\n\r\n\tsubtractItem(item: CartItem, groupID: string) {\r\n\t\tconst group = this.groups.find(group => group.groupID === groupID)\r\n\t\tif (!group) return\r\n\t\tconst cartItem = group.items.find(value => value.skuReference!.path == item.skuReference!.path)\r\n\t\tif (cartItem) {\r\n\t\t\tcartItem.quantity -= 1\r\n\t\t\tif (cartItem.quantity == 0) {\r\n\t\t\t\tthis.deleteItem(item, groupID)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tgroup.items.push(item)\r\n\t\t}\r\n\t\tif (group.items.length <= 0) {\r\n\t\t\tthis.groups = this.groups.filter(group => group.groupID !== groupID)\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteItem(item: CartItem, groupID: string) {\r\n\t\tconst group = this.groups.find(group => group.groupID === groupID)\r\n\t\tif (!group) return\r\n\t\tgroup.items = group.items.filter(value => value.skuReference!.path !== item.skuReference!.path)\r\n\t}\r\n\r\n\tcartGroup(groupID: string) {\r\n\t\treturn this.groups.find(group => group.groupID === groupID)\r\n\t}\r\n\r\n\torder(group: CartGroup) {\r\n\t\treturn group.order(this.id)\r\n\t}\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}