{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/Input.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nexport const useInput = (props, textFieldProps) => {\n  if (typeof props === 'string' || typeof props === 'undefined' || typeof props === 'number' || props === null) {\n    const initValue = String(props || '');\n    const {\n      0: value,\n      1: setValue\n    } = useState(initValue);\n    const {\n      0: error,\n      1: setError\n    } = useState(false);\n    useEffect(() => {\n      setValue(initValue);\n    }, []);\n\n    const onChange = e => {\n      const value = e.target.value;\n      setValue(value);\n\n      if (textFieldProps && value && error) {\n        const inputProps = textFieldProps.inputProps;\n\n        if (inputProps) {\n          const pattern = inputProps.pattern;\n\n          if (pattern) {\n            const regex = new RegExp(pattern);\n            setError(!value.match(regex));\n          }\n        }\n      }\n    };\n\n    const onBlur = e => {\n      const value = e.target.value;\n\n      if (textFieldProps && value) {\n        const inputProps = textFieldProps.inputProps;\n\n        if (inputProps) {\n          const pattern = inputProps.pattern;\n\n          if (pattern) {\n            const regex = new RegExp(pattern);\n            setError(!value.match(regex));\n          }\n        }\n      }\n    };\n\n    return _objectSpread(_objectSpread({}, textFieldProps), {}, {\n      value,\n      error,\n      setValue,\n      onChange: onChange,\n      onBlur: onBlur\n    });\n  } else {\n    const {\n      0: value,\n      1: setValue\n    } = useState(props.initValue ? props.initValue : '');\n    useEffect(() => {\n      setValue(props.initValue ? props.initValue : '');\n    }, [props.initValue]);\n\n    const handleChange = e => setValue(e.target.value);\n\n    return _objectSpread(_objectSpread({}, props.inputProps), {}, {\n      value,\n      setValue,\n      onChange: handleChange\n    });\n  }\n};\nexport default (props => {\n  const filterdKey = Object.keys(props).filter(key => key !== 'setValue');\n  const filterdProps = filterdKey.reduce((prev, key) => {\n    return _objectSpread(_objectSpread({}, prev), {}, {\n      [key]: props[key]\n    });\n  }, {});\n  return __jsx(TextField, _extends({\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, filterdProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/Input.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\r\n\r\ntype InitProps = {\r\n\tinitValue?: string\r\n\tinputProps?: TextFieldProps\r\n}\r\n\r\ntype InitValue = string | number | undefined\r\n\r\nexport const useInput = (props: InitProps | InitValue, textFieldProps?: TextFieldProps) => {\r\n\tif (typeof props === 'string' || typeof props === 'undefined' || typeof props === 'number' || props === null) {\r\n\t\tconst initValue = String(props || '')\r\n\t\tconst [value, setValue] = useState(initValue)\r\n\t\tconst [error, setError] = useState(false)\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(initValue)\r\n\t\t}, [])\r\n\t\tconst onChange = e => {\r\n\t\t\tconst value = e.target.value\r\n\t\t\tsetValue(value)\r\n\t\t\tif (textFieldProps && value && error) {\r\n\t\t\t\tconst inputProps = (textFieldProps as any).inputProps\r\n\t\t\t\tif (inputProps) {\r\n\t\t\t\t\tconst pattern = inputProps.pattern\r\n\t\t\t\t\tif (pattern) {\r\n\t\t\t\t\t\tconst regex = new RegExp(pattern)\r\n\t\t\t\t\t\tsetError(!value.match(regex))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst onBlur = e => {\r\n\t\t\tconst value = e.target.value\r\n\t\t\tif (textFieldProps && value) {\r\n\t\t\t\tconst inputProps = (textFieldProps as any).inputProps\r\n\t\t\t\tif (inputProps) {\r\n\t\t\t\t\tconst pattern = inputProps.pattern\r\n\t\t\t\t\tif (pattern) {\r\n\t\t\t\t\t\tconst regex = new RegExp(pattern)\r\n\t\t\t\t\t\tsetError(!value.match(regex))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...textFieldProps,\r\n\t\t\tvalue,\r\n\t\t\terror,\r\n\t\t\tsetValue,\r\n\t\t\tonChange: onChange,\r\n\t\t\tonBlur: onBlur\r\n\t\t};\r\n\t} else {\r\n\t\tconst [value, setValue] = useState(props.initValue ? props.initValue : '')\r\n\t\tuseEffect(() => {\r\n\t\t\tsetValue(props.initValue ? props.initValue : '')\r\n\t\t}, [props.initValue])\r\n\t\tconst handleChange = e => setValue(e.target.value)\r\n\t\treturn {\r\n\t\t\t...props.inputProps,\r\n\t\t\tvalue,\r\n\t\t\tsetValue,\r\n\t\t\tonChange: handleChange\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default (props: TextFieldProps) => {\r\n\tconst filterdKey = Object.keys(props).filter(key => key !== 'setValue')\r\n\tconst filterdProps = filterdKey.reduce((prev, key) => {\r\n\t\treturn {\r\n\t\t\t...prev,\r\n\t\t\t[key]: props[key]\r\n\t\t}\r\n\t}, {} as TextFieldProps)\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tmargin='normal'\r\n\t\t\tInputLabelProps={{\r\n\t\t\t\tshrink: true,\r\n\t\t\t}}\r\n\t\t\t{...filterdProps}\r\n\t\t/>\r\n\t)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}