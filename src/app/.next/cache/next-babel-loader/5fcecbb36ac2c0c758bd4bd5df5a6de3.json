{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/Drawer.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useContext, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer } from '@material-ui/core';\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nconst _Drawer = ({\n  open,\n  anchor,\n  onClose,\n  children\n}) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [anchor]: open\n    }));\n  };\n\n  const Content = anchor => __jsx(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }\n  }, children);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Drawer, {\n    anchor: anchor,\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, Content(anchor)));\n};\n\nexport const DrawerContext = createContext([() => {}, () => {}, false]);\nexport const DrawerProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    anchor: 'bottom',\n    component: undefined\n  });\n  const open = !!state.component;\n\n  const onClose = () => {\n    setState({\n      component: undefined,\n      anchor: 'bottom'\n    });\n  };\n\n  const showDrawer = (component, anchor = 'bottom') => {\n    setState({\n      component,\n      anchor\n    });\n  };\n\n  return __jsx(DrawerContext.Provider, {\n    value: [showDrawer, onClose, open],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(_Drawer, {\n    open: open,\n    anchor: state.anchor,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, state.component), children);\n};\nexport const useDrawer = () => {\n  return useContext(DrawerContext);\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/Drawer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\tlist: {\r\n\t\twidth: 250,\r\n\t},\r\n\tfullList: {\r\n\t\twidth: 'auto',\r\n\t},\r\n});\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\nconst _Drawer = ({ open, anchor, onClose, children }: { open: boolean, anchor: Anchor, onClose: () => void, children: any }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [state, setState] = React.useState({\r\n\t\ttop: false,\r\n\t\tleft: false,\r\n\t\tbottom: false,\r\n\t\tright: false,\r\n\t});\r\n\r\n\tconst toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n\t\tevent: React.KeyboardEvent | React.MouseEvent,\r\n\t) => {\r\n\t\tif (\r\n\t\t\tevent.type === 'keydown' &&\r\n\t\t\t((event as React.KeyboardEvent).key === 'Tab' ||\r\n\t\t\t\t(event as React.KeyboardEvent).key === 'Shift')\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetState({ ...state, [anchor]: open });\r\n\t};\r\n\r\n\tconst Content = (anchor: Anchor) => (\r\n\t\t<div\r\n\t\t\tclassName={clsx(classes.list, {\r\n\t\t\t\t[classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n\t\t\t})}\r\n\t\t\trole=\"presentation\"\r\n\t\t\tonClick={toggleDrawer(anchor, false)}\r\n\t\t\tonKeyDown={toggleDrawer(anchor, false)}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Drawer anchor={anchor} open={open} onClose={onClose}>\r\n\t\t\t\t{Content(anchor)}\r\n\t\t\t</Drawer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ninterface Prop {\r\n\tanchor: Anchor\r\n\tcomponent?: React.ReactNode\r\n}\r\nexport const DrawerContext = createContext<[(component: React.ReactNode | undefined, anchor?: Anchor) => void, () => void, boolean]>([() => { }, () => { }, false])\r\nexport const DrawerProvider = ({ children }: { children: any }) => {\r\n\tconst [state, setState] = useState<Prop>({\r\n\t\tanchor: 'bottom',\r\n\t\tcomponent: undefined\r\n\t})\r\n\tconst open = !!state.component\r\n\tconst onClose = () => {\r\n\t\tsetState({ component: undefined, anchor: 'bottom' })\r\n\t}\r\n\tconst showDrawer = (component: React.ReactNode, anchor: Anchor = 'bottom') => {\r\n\t\tsetState({ component, anchor })\r\n\t}\r\n\treturn (\r\n\t\t<DrawerContext.Provider value={[showDrawer, onClose, open]}>\r\n\t\t\t<_Drawer open={open} anchor={state.anchor} onClose={onClose}>{state.component}</_Drawer>\r\n\t\t\t{children}\r\n\t\t</DrawerContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useDrawer = () => {\r\n\treturn useContext(DrawerContext)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}