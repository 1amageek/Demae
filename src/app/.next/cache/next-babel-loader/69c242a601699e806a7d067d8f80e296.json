{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nexport const usePaymentMethods = () => {\n  const [data, isLoading, error] = useFunctions('v1-stripe-paymentMethod-list', {\n    type: 'card'\n  });\n  const methods = data === null || data === void 0 ? void 0 : data.data;\n  return [methods, isLoading, error];\n};\nexport const useFunctions = (query, option = {}, waiting = false) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    data: undefined,\n    loading: true\n  });\n\n  const setData = data => {\n    setState({\n      error: undefined,\n      loading: false,\n      data: data\n    });\n  };\n\n  useEffect(() => {\n    let enabled = true;\n\n    const fetchData = async () => {\n      try {\n        const call = await firebase.functions().httpsCallable(query);\n        const response = await call(option);\n        const {\n          result,\n          error\n        } = response.data;\n\n        if (enabled) {\n          if (error) {\n            setState({\n              error: error,\n              loading: false,\n              data: undefined\n            });\n          } else {\n            setState({\n              error: undefined,\n              loading: false,\n              data: result\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n\n        if (enabled) {\n          setState({\n            data: undefined,\n            loading: false,\n            error\n          });\n        }\n      }\n    };\n\n    setState({\n      data: undefined,\n      loading: true,\n      error: undefined\n    });\n\n    if (!waiting) {\n      fetchData();\n    }\n\n    return () => {\n      enabled = false;\n    };\n  }, [waiting]);\n  return [state.data, state.loading, state.error, setData];\n};\nexport const useFetchList = (query, option = {}, waiting = false) => {\n  const [data, isLoading, error] = useFunctions(query, option, waiting);\n  const {\n    0: list,\n    1: setList\n  } = useState((data === null || data === void 0 ? void 0 : data.data) || []);\n\n  const setData = data => setList(data);\n\n  useEffect(() => {\n    setData((data === null || data === void 0 ? void 0 : data.data) || []);\n  }, [data === null || data === void 0 ? void 0 : data.data.length]);\n  return [list, isLoading, error, setData];\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/hooks/stripe/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport firebase from \"firebase\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\nimport { PaymentMethod } from '@stripe/stripe-js';\r\n\r\nexport const usePaymentMethods = (): [PaymentMethod[], boolean, Error | undefined] => {\r\n\tconst [data, isLoading, error] = useFunctions<any>('v1-stripe-paymentMethod-list', { type: 'card' })\r\n\tconst methods = data?.data as PaymentMethod[]\r\n\treturn [methods, isLoading, error]\r\n}\r\n\r\nexport const useFunctions = <T>(query: string, option: any = {}, waiting: boolean = false): [T | undefined, boolean, Error | undefined, (data: T) => void] => {\r\n\r\n\tinterface Prop {\r\n\t\tdata?: T\r\n\t\tloading: boolean\r\n\t\terror?: Error\r\n\t}\r\n\r\n\tconst [state, setState] = useState<Prop>({ data: undefined, loading: true })\r\n\r\n\tconst setData = (data: T) => {\r\n\t\tsetState({\r\n\t\t\terror: undefined,\r\n\t\t\tloading: false,\r\n\t\t\tdata: data\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet enabled = true\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst call = await firebase.functions().httpsCallable(query)\r\n\t\t\t\tconst response = await call(option)\r\n\t\t\t\tconst { result, error } = response.data\r\n\t\t\t\tif (enabled) {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\terror: error,\r\n\t\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\t\tdata: undefined\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\terror: undefined,\r\n\t\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\t\tdata: result\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\tif (enabled) {\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tdata: undefined,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tsetState({\r\n\t\t\tdata: undefined,\r\n\t\t\tloading: true,\r\n\t\t\terror: undefined\r\n\t\t})\r\n\t\tif (!waiting) {\r\n\t\t\tfetchData()\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tenabled = false\r\n\t\t}\r\n\t}, [waiting])\r\n\treturn [state.data, state.loading, state.error, setData]\r\n};\r\n\r\nexport const useFetchList = <T>(query: string, option: any = {}, waiting: boolean = false): [T[], boolean, Error | undefined, (data: T[]) => void] => {\r\n\tconst [data, isLoading, error] = useFunctions<any>(query, option, waiting)\r\n\tconst [list, setList] = useState<T[]>(data?.data || [] as T[])\r\n\tconst setData = (data: T[]) => setList(data)\r\n\tuseEffect(() => {\r\n\t\tsetData(data?.data || [] as T[])\r\n\t}, [data?.data.length])\r\n\treturn [list, isLoading, error, setData]\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}