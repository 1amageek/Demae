{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/Snackbar.tsx\";\nvar __jsx = React.createElement;\nimport React, { createContext, useContext, useState } from 'react';\nimport { Snackbar, IconButton, Box } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nconst ErrorColor = \"#dd0000\";\nconst WarningColor = \"#ffb300\";\nconst InfoColor = \"#1a4fff\";\nconst SuccessColor = \"#3ace55\";\n\nconst Bar = ({\n  open,\n  severity,\n  vertical,\n  message,\n  onClose\n}) => {\n  if (open) {\n    return __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: vertical || 'top',\n        horizontal: 'center'\n      },\n      open: open,\n      autoHideDuration: 2800,\n      onClose: onClose,\n      message: __jsx(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        fontSize: 14,\n        fontWeight: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 75\n        }\n      }, severity === 'error' && __jsx(ErrorIcon, {\n        fontSize: \"small\",\n        style: {\n          marginRight: '8px',\n          color: ErrorColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 32\n        }\n      }), severity === 'warning' && __jsx(WarningIcon, {\n        fontSize: \"small\",\n        style: {\n          marginRight: '8px',\n          color: WarningColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 34\n        }\n      }), severity === 'info' && __jsx(InfoIcon, {\n        fontSize: \"small\",\n        style: {\n          marginRight: '8px',\n          color: InfoColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 31\n        }\n      }), severity === 'success' && __jsx(CheckCircleIcon, {\n        fontSize: \"small\",\n        style: {\n          marginRight: '8px',\n          color: SuccessColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 34\n        }\n      }), message),\n      action: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }\n      }, __jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, __jsx(CloseIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 8\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null);\n};\n\nexport const SnackbarContext = createContext([() => {}, false]);\nexport const SnackbarProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    message: undefined,\n    severity: 'success'\n  });\n  const open = !!state.message;\n\n  const onClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setState({\n      message: undefined,\n      severity: 'success'\n    });\n  };\n\n  const setMessageWithSeverity = (severity, message) => {\n    setState({\n      message,\n      severity\n    });\n  };\n\n  return __jsx(SnackbarContext.Provider, {\n    value: [setMessageWithSeverity, open],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Bar, {\n    open: open,\n    severity: state.severity,\n    vertical: state.vertical,\n    message: state.message,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }), children);\n};\nexport const useSnackbar = () => {\n  return useContext(SnackbarContext);\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/Snackbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\r\nimport { Snackbar, IconButton, Box } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst ErrorColor = \"#dd0000\"\r\nconst WarningColor = \"#ffb300\"\r\nconst InfoColor = \"#1a4fff\"\r\nconst SuccessColor = \"#3ace55\"\r\n\r\nconst Bar = ({ open, severity, vertical, message, onClose }: { open: boolean, severity: Severity, vertical?: 'top' | 'bottom', message?: string, onClose: (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => void }) => {\r\n\tif (open) {\r\n\t\treturn (\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: vertical || 'top',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\topen={open}\r\n\t\t\t\tautoHideDuration={2800}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\tmessage={\r\n\t\t\t\t\t<Box display='flex' alignItems='center' fontSize={14} fontWeight={400}>\r\n\t\t\t\t\t\t{severity === 'error' && <ErrorIcon fontSize=\"small\" style={{ marginRight: '8px', color: ErrorColor }} />}\r\n\t\t\t\t\t\t{severity === 'warning' && <WarningIcon fontSize=\"small\" style={{ marginRight: '8px', color: WarningColor }} />}\r\n\t\t\t\t\t\t{severity === 'info' && <InfoIcon fontSize=\"small\" style={{ marginRight: '8px', color: InfoColor }} />}\r\n\t\t\t\t\t\t{severity === 'success' && <CheckCircleIcon fontSize=\"small\" style={{ marginRight: '8px', color: SuccessColor }} />}\r\n\t\t\t\t\t\t{message}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t}\r\n\t\t\t\taction={\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\treturn <></>\r\n}\r\n\r\ninterface Prop {\r\n\tmessage?: string\r\n\tseverity: Severity\r\n\tvertical?: 'top' | 'bottom'\r\n}\r\nexport type Severity = 'error' | 'warning' | 'info' | 'success'\r\nexport const SnackbarContext = createContext<[(severity: Severity, message?: string, vertical?: 'top' | 'bottom') => void, boolean]>([() => { }, false])\r\nexport const SnackbarProvider = ({ children }: { children: any }) => {\r\n\tconst [state, setState] = useState<Prop>({\r\n\t\tmessage: undefined,\r\n\t\tseverity: 'success'\r\n\t})\r\n\tconst open = !!state.message\r\n\tconst onClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetState({\r\n\t\t\tmessage: undefined,\r\n\t\t\tseverity: 'success'\r\n\t\t})\r\n\t}\r\n\tconst setMessageWithSeverity = (severity: Severity, message?: string) => {\r\n\t\tsetState({ message, severity })\r\n\t}\r\n\treturn (\r\n\t\t<SnackbarContext.Provider value={[setMessageWithSeverity, open]}>\r\n\t\t\t<Bar open={open} severity={state.severity} vertical={state.vertical} message={state.message} onClose={onClose} />\r\n\t\t\t{children}\r\n\t\t</SnackbarContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useSnackbar = () => {\r\n\treturn useContext(SnackbarContext)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}