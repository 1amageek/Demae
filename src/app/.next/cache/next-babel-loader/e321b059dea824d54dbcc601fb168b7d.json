{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/checkout/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { useHistory, Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { Grid, AppBar, Toolbar, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { List, ListItem, ListItemText, ListItemIcon, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useUserShippingAddresses, UserContext, CartContext } from 'hooks/commerce';\nimport { useFetchList } from 'hooks/stripe';\nimport Loading from 'components/Loading';\nimport { Container, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Divider, Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DataLoading from 'components/DataLoading';\nimport CardBrand from 'common/stripe/CardBrand';\nimport * as Commerce from 'models/commerce';\nimport { useProcessing } from 'components/Processing';\nimport { useSnackbar } from 'components/Snackbar';\nimport { useDialog } from 'components/Dialog';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nexport default (props => {\n  var _user$defaultCard;\n\n  const {\n    providerID\n  } = props.match.params;\n  const history = useHistory();\n  const {\n    0: user,\n    1: isUserLoading\n  } = useContext(UserContext);\n  const {\n    0: cart\n  } = useContext(CartContext);\n  const [setProcessing] = useProcessing();\n  const [setMessage] = useSnackbar();\n  const enabled = (user === null || user === void 0 ? void 0 : user.customerID) && (user === null || user === void 0 ? void 0 : (_user$defaultCard = user.defaultCard) === null || _user$defaultCard === void 0 ? void 0 : _user$defaultCard.id) && (user === null || user === void 0 ? void 0 : user.defaultShipping);\n\n  const checkout = async () => {\n    var _user$defaultCard2;\n\n    if (!user) {\n      return;\n    }\n\n    if (!cart) {\n      return;\n    } // customerID\n\n\n    const customerID = user.customerID;\n\n    if (!customerID) {\n      return;\n    } // defaultShipping\n\n\n    const defaultShipping = user.defaultShipping;\n\n    if (!defaultShipping) {\n      return;\n    } // paymentMethodID\n\n\n    const paymentMethodID = (_user$defaultCard2 = user.defaultCard) === null || _user$defaultCard2 === void 0 ? void 0 : _user$defaultCard2.id;\n\n    if (!paymentMethodID) {\n      return;\n    }\n\n    const cartGroup = cart.groups.find(group => group.providedBy === providerID);\n\n    if (!cartGroup) {\n      return;\n    }\n\n    cartGroup.shipping = defaultShipping;\n    const data = cart.order(cartGroup);\n\n    try {\n      setProcessing(true);\n      const checkoutCreate = firebase.functions().httpsCallable('v1-commerce-checkout-create');\n      const response = await checkoutCreate({\n        order: data,\n        paymentMethodID: paymentMethodID,\n        customerID: customerID\n      });\n      const {\n        error,\n        result\n      } = response.data;\n\n      if (error) {\n        console.error(error);\n        setMessage('error', error.message);\n        setProcessing(false);\n        return;\n      }\n\n      console.log(result);\n      setMessage(\"success\", \"Success\");\n      history.push(`/checkout/${providerID}/completed`);\n    } catch (error) {\n      setMessage(\"error\", \"Error\");\n      console.log(error);\n    }\n\n    setProcessing(false);\n  };\n\n  if (isUserLoading) {\n    return __jsx(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 16\n      }\n    }, __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }));\n  }\n\n  return __jsx(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(ShippingAddresses, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(PaymentMethods, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    startIcon: __jsx(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 84\n      }\n    }),\n    disabled: !enabled,\n    onClick: checkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, \"Checkout\"))));\n});\n\nconst ShippingAddresses = ({\n  user\n}) => {\n  const [shippingAddresses, isLoading] = useUserShippingAddresses();\n  const history = useHistory();\n  const [setDialog, close] = useDialog();\n\n  if (isLoading) {\n    return __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"transparent\",\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, \"Shippingg Addresses\"))), shippingAddresses.map(shipping => {\n    var _user$defaultShipping;\n\n    return __jsx(ExpansionPanel, {\n      key: shipping.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 43\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }\n    }, __jsx(FormControlLabel, {\n      onClick: async event => {\n        event.stopPropagation();\n        user.defaultShipping = shipping;\n        await user.save();\n      },\n      onFocus: event => event.stopPropagation(),\n      control: __jsx(Checkbox, {\n        checked: ((_user$defaultShipping = user.defaultShipping) === null || _user$defaultShipping === void 0 ? void 0 : _user$defaultShipping.id) === shipping.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 66\n        }\n      }),\n      label: __jsx(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 137\n        }\n      }, shipping.format(['postal_code', 'line1'])),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    })), __jsx(ExpansionPanelDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, shipping.formatted())), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }\n    }), __jsx(ExpansionPanelActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      onClick: async () => {\n        setDialog('Delete', 'Do you want to remove it?', [{\n          title: 'Cancel',\n          handler: close\n        }, {\n          title: 'OK',\n          handler: async () => {\n            var _user$defaultShipping2;\n\n            if ((user === null || user === void 0 ? void 0 : (_user$defaultShipping2 = user.defaultShipping) === null || _user$defaultShipping2 === void 0 ? void 0 : _user$defaultShipping2.id) === shipping.id) {\n              setDialog('Selected shipping address', 'This shipping address is currently selected. To delete this shipping address, please select another shipping address first.', [{\n                title: 'OK'\n              }]);\n            } else {\n              await (shipping === null || shipping === void 0 ? void 0 : shipping.delete());\n            }\n          }\n        }]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Delete\"), __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => {\n        history.push(`/checkout/shipping/${shipping.id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"Edit\")));\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    component: Link,\n    to: \"/checkout/shipping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 6\n    }\n  }, __jsx(AddIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  })), __jsx(ListItemText, {\n    primary: `Add new shpping address`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst PaymentMethods = ({\n  user\n}) => {\n  const [setProcessing] = useProcessing();\n  const [paymentMethods, isLoading, error, setPaymentMethods] = useFetchList('v1-stripe-paymentMethod-list', {\n    type: 'card'\n  });\n  const [setDialog, close] = useDialog();\n  const [setMessage] = useSnackbar();\n\n  if (error) {\n    console.error(error);\n  }\n\n  const setDefaultPaymentMethod = async paymentMethod => {\n    setProcessing(true);\n    const customerUpdate = firebase.functions().httpsCallable('v1-stripe-customer-update');\n\n    try {\n      const response = await customerUpdate({\n        // payment_method: paymentMethod.id,\n        invoice_settings: {\n          default_payment_method: paymentMethod.id\n        }\n      });\n      const {\n        result,\n        error\n      } = response.data;\n\n      if (error) {\n        console.error(error);\n        setProcessing(false);\n        setMessage('error', error.message);\n        return;\n      }\n\n      const card = new Commerce.Card(paymentMethod.id);\n      card.brand = paymentMethod.card.brand;\n      card.expMonth = paymentMethod.card.exp_month;\n      card.expYear = paymentMethod.card.exp_year;\n      card.last4 = paymentMethod.card.last4;\n      await user.documentReference.set({\n        defaultCard: card.convert()\n      }, {\n        merge: true\n      });\n      console.log('[APP] set default payment method', result);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setProcessing(false);\n  };\n\n  const paymentMethodDetach = async deletePaymentMethod => {\n    if (!deletePaymentMethod) {\n      return;\n    }\n\n    setProcessing(true);\n\n    try {\n      var _user$defaultCard3;\n\n      const detach = firebase.functions().httpsCallable('v1-stripe-paymentMethod-detach');\n      const response = await detach({\n        paymentMethodID: deletePaymentMethod.id\n      });\n      const {\n        result,\n        error\n      } = response.data;\n      console.log('[APP] detach payment method', result);\n      const data = paymentMethods.filter(method => method.id !== deletePaymentMethod.id);\n\n      if (deletePaymentMethod.id === ((_user$defaultCard3 = user.defaultCard) === null || _user$defaultCard3 === void 0 ? void 0 : _user$defaultCard3.id)) {\n        if (data.length > 0) {\n          const method = data[0];\n          await setDefaultPaymentMethod(method);\n        } else {\n          await user.documentReference.set({\n            defaultCard: null\n          }, {\n            merge: true\n          });\n        }\n      }\n\n      setPaymentMethods(data);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setProcessing(false);\n  };\n\n  if (isLoading) {\n    return __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"transparent\",\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 4\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    fontSize: 18,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 6\n    }\n  }, \"Payments\"))), paymentMethods.map(method => {\n    var _user$defaultCard4, _method$card, _method$card2, _method$card3;\n\n    return __jsx(ExpansionPanel, {\n      key: method.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 43\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 8\n      }\n    }, __jsx(FormControlLabel, {\n      onClick: async event => {\n        event.stopPropagation();\n        await setDefaultPaymentMethod(method);\n      },\n      onFocus: event => event.stopPropagation(),\n      control: __jsx(Checkbox, {\n        checked: (user === null || user === void 0 ? void 0 : (_user$defaultCard4 = user.defaultCard) === null || _user$defaultCard4 === void 0 ? void 0 : _user$defaultCard4.id) === method.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 66\n        }\n      }),\n      label: __jsx(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexGrow: 1,\n        style: {\n          width: '140px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 132\n        }\n      }, __jsx(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexGrow: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 12\n        }\n      }, __jsx(\"i\", {\n        className: `pf ${CardBrand[method.card.brand]}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      })), __jsx(Box, {\n        justifySelf: \"flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 12\n        }\n      }, `• • • •  ${(_method$card = method.card) === null || _method$card === void 0 ? void 0 : _method$card.last4}`)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    })), __jsx(ExpansionPanelDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 8\n      }\n    }, __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    }, \"expire \", `${(_method$card2 = method.card) === null || _method$card2 === void 0 ? void 0 : _method$card2.exp_year}/${(_method$card3 = method.card) === null || _method$card3 === void 0 ? void 0 : _method$card3.exp_month}`)), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 8\n      }\n    }), __jsx(ExpansionPanelActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 8\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      onClick: async () => {\n        setDialog('Delete', 'Do you want to remove it?', [{\n          title: 'Cancel',\n          handler: close\n        }, {\n          title: 'OK',\n          handler: async () => {\n            await paymentMethodDetach(method);\n          }\n        }]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }, \"Delete\")));\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 4\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    component: Link,\n    to: \"/checkout/paymentMethod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 6\n    }\n  }, __jsx(AddIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  })), __jsx(ListItemText, {\n    primary: `Add new payment method`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 6\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/checkout/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport { Grid, AppBar, Toolbar, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { List, ListItem, ListItemText, ListItemIcon, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useUserShippingAddresses, UserContext, CartContext } from 'hooks/commerce'\r\nimport { useFetchList } from 'hooks/stripe'\r\nimport Loading from 'components/Loading'\r\nimport { Container, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Divider, Box } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DataLoading from 'components/DataLoading';\r\nimport CardBrand from 'common/stripe/CardBrand'\r\nimport * as Commerce from 'models/commerce'\r\nimport { PaymentMethod } from '@stripe/stripe-js';\r\nimport { useProcessing } from 'components/Processing';\r\nimport { useSnackbar } from 'components/Snackbar'\r\nimport { useDialog } from 'components/Dialog'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nexport default (props: any) => {\r\n\tconst { providerID } = props.match.params\r\n\tconst history = useHistory()\r\n\tconst [user, isUserLoading] = useContext(UserContext)\r\n\tconst [cart] = useContext(CartContext)\r\n\tconst [setProcessing] = useProcessing()\r\n\tconst [setMessage] = useSnackbar()\r\n\r\n\tconst enabled = (user?.customerID && user?.defaultCard?.id && user?.defaultShipping)\r\n\r\n\tconst checkout = async () => {\r\n\t\tif (!user) { return }\r\n\t\tif (!cart) { return }\r\n\r\n\t\t// customerID\r\n\t\tconst customerID = user.customerID\r\n\t\tif (!customerID) { return }\r\n\r\n\t\t// defaultShipping\r\n\t\tconst defaultShipping = user.defaultShipping\r\n\t\tif (!defaultShipping) { return }\r\n\r\n\t\t// paymentMethodID\r\n\t\tconst paymentMethodID = user.defaultCard?.id\r\n\t\tif (!paymentMethodID) { return }\r\n\r\n\t\tconst cartGroup = cart.groups.find(group => group.providedBy === providerID)\r\n\t\tif (!cartGroup) { return }\r\n\r\n\t\tcartGroup.shipping = defaultShipping\r\n\t\tconst data = cart.order(cartGroup)\r\n\r\n\t\ttry {\r\n\t\t\tsetProcessing(true)\r\n\t\t\tconst checkoutCreate = firebase.functions().httpsCallable('v1-commerce-checkout-create')\r\n\t\t\tconst response = await checkoutCreate({\r\n\t\t\t\torder: data,\r\n\t\t\t\tpaymentMethodID: paymentMethodID,\r\n\t\t\t\tcustomerID: customerID\r\n\t\t\t})\r\n\t\t\tconst { error, result } = response.data\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\tsetMessage('error', error.message)\r\n\t\t\t\tsetProcessing(false)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconsole.log(result)\r\n\t\t\tsetMessage(\"success\", \"Success\")\r\n\t\t\thistory.push(`/checkout/${providerID}/completed`)\r\n\t\t} catch (error) {\r\n\t\t\tsetMessage(\"error\", \"Error\")\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t\tsetProcessing(false)\r\n\t}\r\n\r\n\tif (isUserLoading) {\r\n\t\treturn <Container maxWidth='sm'><Loading /></Container>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='sm'>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<ShippingAddresses user={user!} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<PaymentMethods user={user!} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tstartIcon={<CheckCircleIcon />}\r\n\t\t\t\t\t\tdisabled={!enabled}\r\n\t\t\t\t\t\tonClick={checkout}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCheckout\r\n\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nconst ShippingAddresses = ({ user }: { user: Commerce.User }) => {\r\n\r\n\tconst [shippingAddresses, isLoading] = useUserShippingAddresses()\r\n\tconst history = useHistory()\r\n\tconst [setDialog, close] = useDialog()\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Paper>\r\n\t\t\t\t<DataLoading />\r\n\t\t\t</Paper>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<AppBar position='static' color='transparent' elevation={0}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant='h6'>\r\n\t\t\t\t\t\tShippingg Addresses\r\n          </Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{\r\n\t\t\t\tshippingAddresses.map(shipping => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ExpansionPanel key={shipping.id} >\r\n\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tonClick={async (event) => {\r\n\t\t\t\t\t\t\t\t\t\tevent.stopPropagation()\r\n\t\t\t\t\t\t\t\t\t\tuser.defaultShipping = shipping\r\n\t\t\t\t\t\t\t\t\t\tawait user.save()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event) => event.stopPropagation()}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox checked={user.defaultShipping?.id === shipping.id} />}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Typography>{shipping.format(['postal_code', 'line1'])}</Typography>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t{shipping.formatted()}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<ExpansionPanelActions>\r\n\t\t\t\t\t\t\t\t<Button size=\"small\" onClick={async () => {\r\n\t\t\t\t\t\t\t\t\tsetDialog('Delete', 'Do you want to remove it?', [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Cancel',\r\n\t\t\t\t\t\t\t\t\t\t\thandler: close\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'OK',\r\n\t\t\t\t\t\t\t\t\t\t\thandler: async () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (user?.defaultShipping?.id === shipping.id) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialog('Selected shipping address', 'This shipping address is currently selected. To delete this shipping address, please select another shipping address first.',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'OK'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}])\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait shipping?.delete()\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}])\r\n\t\t\t\t\t\t\t\t}}>Delete</Button>\r\n\t\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/checkout/shipping/${shipping.id}`)\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tEdit\r\n          \t\t\t</Button>\r\n\t\t\t\t\t\t\t</ExpansionPanelActions>\r\n\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem button component={Link} to='/checkout/shipping'>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<AddIcon color=\"secondary\" />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary={`Add new shpping address`} />\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nconst PaymentMethods = ({ user }: { user: Commerce.User }) => {\r\n\r\n\tconst [setProcessing] = useProcessing()\r\n\tconst [paymentMethods, isLoading, error, setPaymentMethods] = useFetchList<PaymentMethod>('v1-stripe-paymentMethod-list', { type: 'card' })\r\n\tconst [setDialog, close] = useDialog()\r\n\tconst [setMessage] = useSnackbar()\r\n\r\n\tif (error) {\r\n\t\tconsole.error(error)\r\n\t}\r\n\r\n\tconst setDefaultPaymentMethod = async (paymentMethod: PaymentMethod) => {\r\n\t\tsetProcessing(true)\r\n\t\tconst customerUpdate = firebase.functions().httpsCallable('v1-stripe-customer-update')\r\n\t\ttry {\r\n\t\t\tconst response = await customerUpdate({\r\n\t\t\t\t// payment_method: paymentMethod.id,\r\n\t\t\t\tinvoice_settings: {\r\n\t\t\t\t\tdefault_payment_method: paymentMethod.id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst { result, error } = response.data\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\tsetProcessing(false)\r\n\t\t\t\tsetMessage('error', error.message)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconst card = new Commerce.Card(paymentMethod.id)\r\n\t\t\tcard.brand = paymentMethod.card!.brand\r\n\t\t\tcard.expMonth = paymentMethod.card!.exp_month\r\n\t\t\tcard.expYear = paymentMethod.card!.exp_year\r\n\t\t\tcard.last4 = paymentMethod.card!.last4\r\n\t\t\tawait user.documentReference.set({\r\n\t\t\t\tdefaultCard: card.convert()\r\n\t\t\t}, { merge: true })\r\n\t\t\tconsole.log('[APP] set default payment method', result)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t\tsetProcessing(false)\r\n\t}\r\n\r\n\tconst paymentMethodDetach = async (deletePaymentMethod: PaymentMethod) => {\r\n\t\tif (!deletePaymentMethod) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetProcessing(true)\r\n\t\ttry {\r\n\t\t\tconst detach = firebase.functions().httpsCallable('v1-stripe-paymentMethod-detach')\r\n\t\t\tconst response = await detach({\r\n\t\t\t\tpaymentMethodID: deletePaymentMethod.id\r\n\t\t\t})\r\n\t\t\tconst { result, error } = response.data\r\n\t\t\tconsole.log('[APP] detach payment method', result)\r\n\t\t\tconst data = paymentMethods.filter(method => method.id !== deletePaymentMethod.id)\r\n\t\t\tif (deletePaymentMethod.id === user.defaultCard?.id) {\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tconst method = data[0]\r\n\t\t\t\t\tawait setDefaultPaymentMethod(method)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait user.documentReference.set({\r\n\t\t\t\t\t\tdefaultCard: null\r\n\t\t\t\t\t}, { merge: true })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetPaymentMethods(data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t\tsetProcessing(false)\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Paper>\r\n\t\t\t\t<DataLoading />\r\n\t\t\t</Paper>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<AppBar position='static' color='transparent' elevation={0}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Box fontSize={18} fontWeight={600}>\r\n\t\t\t\t\t\tPayments\r\n          </Box>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{\r\n\t\t\t\tpaymentMethods.map(method => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ExpansionPanel key={method.id} >\r\n\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tonClick={async (event) => {\r\n\t\t\t\t\t\t\t\t\t\tevent.stopPropagation()\r\n\t\t\t\t\t\t\t\t\t\tawait setDefaultPaymentMethod(method)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event) => event.stopPropagation()}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox checked={user?.defaultCard?.id === method.id} />}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\" flexGrow={1} style={{ width: '140px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\" flexGrow={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className={`pf ${CardBrand[method.card!.brand]}`}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box justifySelf=\"flex-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`• • • •  ${method.card?.last4}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\texpire {`${method.card?.exp_year}/${method.card?.exp_month}`}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<ExpansionPanelActions>\r\n\t\t\t\t\t\t\t\t<Button size=\"small\" onClick={async () => {\r\n\t\t\t\t\t\t\t\t\tsetDialog('Delete', 'Do you want to remove it?', [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Cancel',\r\n\t\t\t\t\t\t\t\t\t\t\thandler: close\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'OK',\r\n\t\t\t\t\t\t\t\t\t\t\thandler: async () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tawait paymentMethodDetach(method)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}])\r\n\t\t\t\t\t\t\t\t}}>Delete</Button>\r\n\t\t\t\t\t\t\t</ExpansionPanelActions>\r\n\t\t\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem button component={Link} to='/checkout/paymentMethod'>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<AddIcon color=\"secondary\" />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary={`Add new payment method`} />\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}