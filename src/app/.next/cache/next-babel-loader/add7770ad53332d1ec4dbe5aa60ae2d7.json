{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/account/histories/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'firebase/auth';\nimport 'firebase/functions';\nimport { List, ListItem, ListItemAvatar, Avatar, Container } from '@material-ui/core';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { UserContext } from 'hooks/commerce';\nimport { useDataSourceListen } from 'hooks/firestore';\nimport DataLoading from 'components/DataLoading';\nimport { Paper, Grid, Box } from '@material-ui/core';\nimport Order from 'models/commerce/Order';\nexport default _s(() => {\n  _s();\n\n  var {\n    0: user,\n    1: isLoading,\n    2: error\n  } = useContext(UserContext);\n\n  if (isLoading) {\n    return __jsx(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }\n  }, __jsx(OrderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  })))));\n}, \"gPbvMqcX/0qKS3R08r8E0a7CK20=\");\n\nvar OrderList = () => {\n  _s2();\n\n  var {\n    0: user,\n    1: isLoading\n  } = useContext(UserContext);\n  var ref = user === null || user === void 0 ? void 0 : user.orders.collectionReference;\n  var [orders, isDataLoading] = useDataSourceListen(Order, {\n    path: ref === null || ref === void 0 ? void 0 : ref.path\n  }, isLoading);\n\n  if (isDataLoading) {\n    return __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (orders.length === 0) {\n    return __jsx(Box, {\n      padding: 3,\n      display: \"flex\",\n      justifyContent: \"center\",\n      fontWeight: 600,\n      fontSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, \"There are no orders.\");\n  }\n\n  return __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, orders.map(order => {\n    return __jsx(ListItem, {\n      button: true,\n      key: order.id,\n      component: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }\n    }, __jsx(Avatar, {\n      src: order.imageURLs()[0],\n      variant: \"rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    })), __jsx(ListItemText, {\n      primary: order.title,\n      secondary: order.shippingDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }\n    }));\n  }));\n};\n\n_s2(OrderList, \"aE/B5AOW5gRMW6HINJt6D7M8QDQ=\", false, function () {\n  return [useDataSourceListen];\n});\n\n_c = OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/account/histories/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\nimport { List, ListItem, ListItemAvatar, Avatar, Container } from '@material-ui/core';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { UserContext } from 'hooks/commerce'\r\nimport { useDataSourceListen, useDocumentListen } from 'hooks/firestore';\r\nimport DataLoading from 'components/DataLoading';\r\nimport { Paper, Grid, Typography, Box } from '@material-ui/core';\r\nimport Order from 'models/commerce/Order';\r\n\r\nexport default () => {\r\n\tconst [user, isLoading, error] = useContext(UserContext)\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Container maxWidth='sm'>\r\n\t\t\t\t<DataLoading />\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='sm'>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t<OrderList />\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\n\r\nconst OrderList = () => {\r\n\tconst [user, isLoading] = useContext(UserContext)\r\n\tconst ref = user?.orders.collectionReference\r\n\tconst [orders, isDataLoading] = useDataSourceListen<Order>(Order, { path: ref?.path }, isLoading)\r\n\r\n\tif (isDataLoading) {\r\n\t\treturn <DataLoading />\r\n\t}\r\n\r\n\tif (orders.length === 0) {\r\n\t\treturn <Box padding={3} display='flex' justifyContent='center' fontWeight={600} fontSize={20}>There are no orders.</Box>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{\r\n\t\t\t\torders.map(order => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListItem button key={order.id} component={Link} to=\"/\">\r\n\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<Avatar src={order.imageURLs()[0]} variant='rounded' />\r\n\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t<ListItemText primary={order.title} secondary={order.shippingDate} />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}