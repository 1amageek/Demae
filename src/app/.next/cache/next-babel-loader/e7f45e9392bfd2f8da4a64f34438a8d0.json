{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/account/payments/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport 'firebase/auth';\nimport 'firebase/functions';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Container } from '@material-ui/core';\nimport DataLoading from 'components/DataLoading';\nimport { Box } from '@material-ui/core';\nimport { useFunctions } from 'hooks/stripe';\nimport Board from 'components/Board';\nimport { Symbol } from 'common/Currency';\nexport default (() => {\n  return __jsx(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(Balance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }));\n});\n\nvar Balance = () => {\n  _s();\n\n  var history = useHistory();\n  var [data, isLoading] = useFunctions('v1-stripe-balance-retrieve');\n  var avalable = (data === null || data === void 0 ? void 0 : data.available) || [];\n\n  if (isLoading) {\n    return __jsx(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return __jsx(Board, {\n    onClick: () => {\n      history.push('/account');\n    },\n    header: __jsx(Box, {\n      display: \"flex\",\n      flexGrow: 1,\n      fontSize: 17,\n      fontWeight: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }, \"Balance\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, avalable.map((value, index) => {\n    var currency = value.currency.toUpperCase() || 'USD';\n    var symbol = Symbol(currency);\n    var amount = value.amount;\n    return __jsx(TableRow, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(Box, {\n      display: \"flex\",\n      flexGrow: 1,\n      fontSize: 15,\n      fontWeight: 800,\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }\n    }, currency)), __jsx(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(Box, {\n      display: \"flex\",\n      flexGrow: 1,\n      fontSize: 15,\n      fontWeight: 800,\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }, symbol, amount.toLocaleString())));\n  }))));\n};\n\n_s(Balance, \"qj0fJX4oT6bjtJJtbpCOXKIYiF4=\", false, function () {\n  return [useHistory, useFunctions];\n});\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/account/payments/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport firebase, { database } from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Container } from '@material-ui/core'\r\nimport DataLoading from 'components/DataLoading';\r\nimport { Paper, Grid, Typography, Box } from '@material-ui/core';\r\nimport { useFunctions } from 'hooks/stripe'\r\nimport Board from 'components/Board'\r\nimport { Symbol } from 'common/Currency'\r\n\r\nexport default () => {\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='sm'>\r\n\t\t\t<Balance />\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nconst Balance = () => {\r\n\tconst history = useHistory()\r\n\tconst [data, isLoading] = useFunctions<any>('v1-stripe-balance-retrieve')\r\n\tconst avalable = data?.available || []\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Board>\r\n\t\t\t\t<DataLoading />\r\n\t\t\t</Board>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Board onClick={() => {\r\n\t\t\thistory.push('/account')\r\n\t\t}} header={\r\n\t\t\t<Box display='flex' flexGrow={1} fontSize={17} fontWeight={500}>\r\n\t\t\t\tBalance\r\n\t\t\t</Box>\r\n\t\t}>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{avalable.map((value, index) => {\r\n\t\t\t\t\t\tconst currency = value.currency.toUpperCase() || 'USD'\r\n\t\t\t\t\t\tconst symbol = Symbol(currency)\r\n\t\t\t\t\t\tconst amount = value.amount as number\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableRow key={index}>\r\n\t\t\t\t\t\t\t\t{/* <ListItemText primary={value.currency} secondary={value.amount} /> */}\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<Box display='flex' flexGrow={1} fontSize={15} fontWeight={800} justifyContent='center'>\r\n\t\t\t\t\t\t\t\t\t\t{currency}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<Box display='flex' flexGrow={1} fontSize={15} fontWeight={800} justifyContent='center'>\r\n\t\t\t\t\t\t\t\t\t\t{symbol}{amount.toLocaleString()}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</Board>\r\n\t)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}