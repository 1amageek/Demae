{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/providers/ProviderList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'components/providers/Card';\nimport DataLoading from 'components/DataLoading';\nimport { useDataSourceListen } from 'hooks/firestore';\nimport { Provider } from 'models/commerce';\nvar useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\nexport default _s(() => {\n  _s();\n\n  var ref = Provider.collectionReference();\n  var [data, isLoading] = useDataSourceListen(Provider, {\n    path: ref.path,\n    limit: 30\n  });\n\n  if (isLoading) {\n    return __jsx(DataLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, data.map(doc => {\n    return __jsx(Grid, {\n      key: doc.id,\n      item: true,\n      xs: 12,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      provider: doc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }));\n  }));\n}, \"DegcfwUur2luR7YC6J1hTYqRxgw=\", false, function () {\n  return [useDataSourceListen];\n});","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/providers/ProviderList.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,UAAT,EAAqB,YAArB,QAAgD,0BAAhD;AACA,OAAO,IAAP,MAAiB,wBAAjB;AAIA,OAAO,IAAP,MAAiB,2BAAjB;AACA,OAAO,WAAP,MAAwB,wBAAxB;AACA,SAAS,mBAAT,QAAoC,iBAApC;AACA,SAAS,QAAT,QAAyB,iBAAzB;AAEA,IAAM,SAAS,GAAG,UAAU,CAAE,KAAD,IAC5B,YAAY,CAAC;AACZ,EAAA,IAAI,EAAE;AACL,IAAA,QAAQ,EAAE;AADL,GADM;AAIZ,EAAA,KAAK,EAAE;AACN,IAAA,OAAO,EAAE,KAAK,CAAC,OAAN,CAAc,CAAd,CADH;AAEN,IAAA,MAAM,EAAE,MAFF;AAGN,IAAA,QAAQ,EAAE;AAHJ,GAJK;AASZ,EAAA,KAAK,EAAE;AACN,IAAA,KAAK,EAAE,GADD;AAEN,IAAA,MAAM,EAAE;AAFF,GATK;AAaZ,EAAA,GAAG,EAAE;AACJ,IAAA,MAAM,EAAE,MADJ;AAEJ,IAAA,OAAO,EAAE,OAFL;AAGJ,IAAA,QAAQ,EAAE,MAHN;AAIJ,IAAA,SAAS,EAAE;AAJP;AAbO,CAAD,CADe,CAA5B;AAuBA,kBAAe,MAAK;AAAA;;AACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,mBAAT,EAAZ;AACA,MAAM,CAAC,IAAD,EAAO,SAAP,IAAoB,mBAAmB,CAAW,QAAX,EAAqB;AAAE,IAAA,IAAI,EAAE,GAAG,CAAC,IAAZ;AAAkB,IAAA,KAAK,EAAE;AAAzB,GAArB,CAA7C;;AAEA,MAAI,SAAJ,EAAe;AACd,WAAO,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAED,SACC,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAI,CAAC,GAAL,CAAS,GAAG,IAAG;AACf,WACC,MAAC,IAAD;AAAM,MAAA,GAAG,EAAE,GAAG,CAAC,EAAf;AAAmB,MAAA,IAAI,MAAvB;AAAwB,MAAA,EAAE,EAAE,EAA5B;AAAgC,MAAA,SAAS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA,GANA,CADF,CADD;AAWA,CAnBD;AAAA,UAE2B,mBAF3B;AAAA","sourcesContent":["import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Card from 'components/providers/Card'\r\nimport DataLoading from 'components/DataLoading'\r\nimport { useDataSourceListen } from 'hooks/firestore';\r\nimport { Provider } from 'models/commerce';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tpadding: theme.spacing(2),\r\n\t\t\tmargin: 'auto',\r\n\t\t\tmaxWidth: 500,\r\n\t\t},\r\n\t\timage: {\r\n\t\t\twidth: 128,\r\n\t\t\theight: 128,\r\n\t\t},\r\n\t\timg: {\r\n\t\t\tmargin: 'auto',\r\n\t\t\tdisplay: 'block',\r\n\t\t\tmaxWidth: '100%',\r\n\t\t\tmaxHeight: '100%',\r\n\t\t},\r\n\t}),\r\n);\r\n\r\nexport default () => {\r\n\tconst ref = Provider.collectionReference()\r\n\tconst [data, isLoading] = useDataSourceListen<Provider>(Provider, { path: ref.path, limit: 30 })\r\n\r\n\tif (isLoading) {\r\n\t\treturn <DataLoading />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={2}>\r\n\t\t\t{data.map(doc => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid key={doc.id} item xs={12} container>\r\n\t\t\t\t\t\t<Card provider={doc} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</Grid>\r\n\t);\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}