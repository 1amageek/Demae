{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/components/Dialog.tsx\";\nvar __jsx = React.createElement;\nimport React, { createContext, useContext, useState } from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\n\nconst _Dialog = ({\n  open,\n  title,\n  body,\n  actions,\n  onClose\n}) => {\n  if (open) {\n    return __jsx(Dialog, {\n      onClose: onClose,\n      open: open,\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      style: {\n        minWidth: '280px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 5\n      }\n    }, __jsx(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 6\n      }\n    }, title), body && __jsx(DialogContent, {\n      dividers: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }\n    }, body), __jsx(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 6\n      }\n    }, actions.map((action, index) => {\n      return __jsx(Button, {\n        key: index,\n        variant: action.variant,\n        color: action.color,\n        autoFocus: action.autoFocus,\n        onClick: () => {\n          onClose();\n\n          if (action.handler) {\n            action.handler();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, action.title);\n    }))));\n  }\n\n  return __jsx(React.Fragment, null);\n};\n\nexport const DialogContext = createContext([() => {}, () => {}, false]);\nexport const DialogProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: undefined,\n    body: undefined,\n    actions: []\n  });\n  const open = !!state.title || !!state.body;\n\n  const onClose = () => {\n    setState({\n      title: undefined,\n      body: undefined,\n      actions: []\n    });\n  };\n\n  const setDialog = (title, body, actions) => {\n    setState({\n      title,\n      body,\n      actions\n    });\n  };\n\n  return __jsx(DialogContext.Provider, {\n    value: [setDialog, onClose, open],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(_Dialog, {\n    open: open,\n    title: state.title,\n    body: state.body,\n    actions: state.actions,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }), children);\n};\nexport const useDialog = () => {\n  return useContext(DialogContext);\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/components/Dialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, PropTypes } from '@material-ui/core';\r\n\r\ninterface Action {\r\n\ttitle: string\r\n\tautoFocus?: boolean\r\n\tvariant?: 'text' | 'outlined' | 'contained';\r\n\tcolor?: PropTypes.Color\r\n\thandler?: () => void\r\n}\r\n\r\ninterface Prop {\r\n\ttitle?: string\r\n\tbody?: string\r\n\tactions: Action[]\r\n}\r\n\r\nconst _Dialog = ({ open, title, body, actions, onClose }: { open: boolean, title?: string, body?: string, actions: Action[], onClose: () => void }) => {\r\n\tif (open) {\r\n\t\treturn (\r\n\t\t\t<Dialog onClose={onClose} open={open} maxWidth='md'>\r\n\t\t\t\t<div style={{ minWidth: '280px' }}>\r\n\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t{body && <DialogContent dividers>\r\n\t\t\t\t\t\t{body}\r\n\t\t\t\t\t</DialogContent>}\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t{actions.map((action, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Button key={index} variant={action.variant} color={action.color} autoFocus={action.autoFocus} onClick={() => {\r\n\t\t\t\t\t\t\t\t\tonClose()\r\n\t\t\t\t\t\t\t\t\tif (action.handler) {\r\n\t\t\t\t\t\t\t\t\t\taction.handler()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{action.title}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</div>\r\n\t\t\t</Dialog>\r\n\t\t)\r\n\t}\r\n\treturn <></>\r\n}\r\n\r\nexport const DialogContext = createContext<[(title: string | undefined, body: string | undefined, actions: Action[]) => void, () => void, boolean]>([() => { }, () => { }, false])\r\nexport const DialogProvider = ({ children }: { children: any }) => {\r\n\tconst [state, setState] = useState<Prop>({\r\n\t\ttitle: undefined,\r\n\t\tbody: undefined,\r\n\t\tactions: []\r\n\t})\r\n\tconst open = !!state.title || !!state.body\r\n\tconst onClose = () => {\r\n\t\tsetState({\r\n\t\t\ttitle: undefined,\r\n\t\t\tbody: undefined,\r\n\t\t\tactions: []\r\n\t\t})\r\n\t}\r\n\tconst setDialog = (title: string | undefined, body: string | undefined, actions: Action[]) => {\r\n\t\tsetState({ title, body, actions })\r\n\t}\r\n\treturn (\r\n\t\t<DialogContext.Provider value={[setDialog, onClose, open]}>\r\n\t\t\t<_Dialog open={open} title={state.title} body={state.body} actions={state.actions} onClose={onClose} />\r\n\t\t\t{children}\r\n\t\t</DialogContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useDialog = () => {\r\n\treturn useContext(DialogContext)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}