{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/Demae/src/app/hooks/account/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { createContext, useContext } from 'react';\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { Account } from 'models/account';\nimport { AuthContext } from '../auth';\nimport { useDocumentListen } from 'hooks/firestore';\nexport const AccountContext = createContext([undefined, true, undefined]);\nexport const AccountProvider = ({\n  children\n}) => {\n  const {\n    0: auth,\n    1: waiting\n  } = useContext(AuthContext);\n  const [account, isLoading, error] = useDocumentListen(Account, auth ? new Account(auth.uid).documentReference : undefined, waiting);\n  return __jsx(AccountContext.Provider, {\n    value: [account, isLoading, error],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }, \" \", children, \" \");\n};\nexport const useAccount = () => {\n  return useContext(AccountContext);\n};","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/hooks/account/index.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAP,IAAgB,aAAhB,EAA+B,UAA/B,QAAiD,OAAjD;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAAS,OAAT,QAAwB,gBAAxB;AACA,SAAS,WAAT,QAA4B,SAA5B;AACA,SAAS,iBAAT,QAAkC,iBAAlC;AAEA,OAAO,MAAM,cAAc,GAAG,aAAa,CAAoD,CAAC,SAAD,EAAY,IAAZ,EAAkB,SAAlB,CAApD,CAApC;AACP,OAAO,MAAM,eAAe,GAAG,CAAC;AAAE,EAAA;AAAF,CAAD,KAAoC;AAClE,QAAM;AAAA,OAAC,IAAD;AAAA,OAAO;AAAP,MAAkB,UAAU,CAAC,WAAD,CAAlC;AACA,QAAM,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,IAA8B,iBAAiB,CAAU,OAAV,EAAmB,IAAI,GAAI,IAAI,OAAJ,CAAY,IAAI,CAAC,GAAjB,EAAsB,iBAA1B,GAA+C,SAAtE,EAAiF,OAAjF,CAArD;AACA,SAAO,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+D,QAA/D,MAAP;AACA,CAJM;AAMP,OAAO,MAAM,UAAU,GAAG,MAAwD;AACjF,SAAO,UAAU,CAAC,cAAD,CAAjB;AACA,CAFM","sourcesContent":["import React, { createContext, useContext } from 'react'\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\nimport { Account } from 'models/account'\r\nimport { AuthContext } from '../auth'\r\nimport { useDocumentListen } from 'hooks/firestore'\r\n\r\nexport const AccountContext = createContext<[Account | undefined, boolean, Error | undefined]>([undefined, true, undefined])\r\nexport const AccountProvider = ({ children }: { children: any }) => {\r\n\tconst [auth, waiting] = useContext(AuthContext)\r\n\tconst [account, isLoading, error] = useDocumentListen<Account>(Account, auth ? (new Account(auth.uid).documentReference) : undefined, waiting)\r\n\treturn <AccountContext.Provider value={[account, isLoading, error]}> {children} </AccountContext.Provider>\r\n}\r\n\r\nexport const useAccount = (): [Account | undefined, boolean, Error | undefined] => {\r\n\treturn useContext(AccountContext)\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}