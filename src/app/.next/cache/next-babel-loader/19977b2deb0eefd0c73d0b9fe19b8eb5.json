{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Doc, Field, firestore, SubCollection, Collection, Codable } from '@1amageek/ballcap';\nimport Shipping from './Shipping';\nimport Card from './Card';\n\nlet User =\n/** @class */\n(() => {\n  class User extends Doc {\n    constructor() {\n      super(...arguments);\n      this.isAvailable = false;\n      this.country = 'US';\n      this.currency = 'USD';\n      this.providers = new Collection();\n      this.shippingAddresses = new Collection();\n      this.orders = new Collection();\n    }\n\n    static collectionReference() {\n      return firestore.collection('commerce/v1/users');\n    }\n\n  }\n\n  __decorate([Field], User.prototype, \"customerID\", void 0);\n\n  __decorate([Field], User.prototype, \"isAvailable\", void 0);\n\n  __decorate([Field], User.prototype, \"country\", void 0);\n\n  __decorate([Field], User.prototype, \"currency\", void 0);\n\n  __decorate([Field], User.prototype, \"currentOrderID\", void 0);\n\n  __decorate([Codable(Shipping, true), Field], User.prototype, \"defaultShipping\", void 0);\n\n  __decorate([Codable(Card, true), Field], User.prototype, \"defaultCard\", void 0);\n\n  __decorate([SubCollection], User.prototype, \"providers\", void 0);\n\n  __decorate([SubCollection], User.prototype, \"shippingAddresses\", void 0);\n\n  __decorate([SubCollection], User.prototype, \"orders\", void 0);\n\n  return User;\n})();\n\nexport default User;","map":{"version":3,"sources":["/Users/1amageek/Desktop/Demae/src/app/models/commerce/User.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,GAAT,EAAc,KAAd,EAAqB,SAArB,EAAqD,aAArD,EAAoE,UAApE,EAAgF,OAAhF,QAA+F,mBAA/F;AAEA,OAAO,QAAP,MAAqB,YAArB;AAEA,OAAO,IAAP,MAAiB,QAAjB;;AAIA,IAAA,IAAA;AAAA;AAAA,CAAA,MAAA;AAAA,QAAqB,IAArB,SAAkC,GAAlC,CAAqC;AAArC,IAAA,WAAA,GAAA;;AAOQ,WAAA,WAAA,GAAuB,KAAvB;AACA,WAAA,OAAA,GAAuB,IAAvB;AACA,WAAA,QAAA,GAAyB,KAAzB;AAOQ,WAAA,SAAA,GAA8B,IAAI,UAAJ,EAA9B;AACA,WAAA,iBAAA,GAA0C,IAAI,UAAJ,EAA1C;AACA,WAAA,MAAA,GAA4B,IAAI,UAAJ,EAA5B;AAEf;;AAlBA,WAAO,mBAAP,GAA0B;AACzB,aAAO,SAAS,CAAC,UAAV,CAAqB,mBAArB,CAAP;AACA;;AAJmC;;AAM7B,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,cAAA,E,YAAA,E,KAAmB,CAAnB,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,cAAA,E,aAAA,E,KAA4B,CAA5B,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,cAAA,E,SAAA,E,KAA2B,CAA3B,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,cAAA,E,UAAA,E,KAA8B,CAA9B,CAAA;;AACA,EAAA,UAAA,CAAA,CAAN,KAAM,CAAA,E,cAAA,E,gBAAA,E,KAAuB,CAAvB,CAAA;;AAEA,EAAA,UAAA,CAAA,CADN,OAAO,CAAC,QAAD,EAAW,IAAX,CACD,EAAN,KAAM,CAAA,E,cAAA,E,iBAAA,E,KAA0B,CAA1B,CAAA;;AAEA,EAAA,UAAA,CAAA,CADN,OAAO,CAAC,IAAD,EAAO,IAAP,CACD,EAAN,KAAM,CAAA,E,cAAA,E,aAAA,E,KAAkB,CAAlB,CAAA;;AAEQ,EAAA,UAAA,CAAA,CAAd,aAAc,CAAA,E,cAAA,E,WAAA,E,KAA8C,CAA9C,CAAA;;AACA,EAAA,UAAA,CAAA,CAAd,aAAc,CAAA,E,cAAA,E,mBAAA,E,KAA0D,CAA1D,CAAA;;AACA,EAAA,UAAA,CAAA,CAAd,aAAc,CAAA,E,cAAA,E,QAAA,E,KAA4C,CAA5C,CAAA;;AAEhB,SAAA,IAAA;AAAC,CApBD,GAAA;;eAAqB,I","sourcesContent":["import { Doc, Field, firestore, CollectionReference, SubCollection, Collection, Codable } from '@1amageek/ballcap'\r\nimport { CountryCode } from 'common/Country'\r\nimport Shipping from './Shipping'\r\nimport Order from './Order'\r\nimport Card from './Card'\r\nimport { Role } from './Provider'\r\nimport { CurrencyCode } from 'common/Currency'\r\n\r\nexport default class User extends Doc {\r\n\r\n\tstatic collectionReference(): CollectionReference {\r\n\t\treturn firestore.collection('commerce/v1/users')\r\n\t}\r\n\r\n\t@Field customerID?: string\r\n\t@Field isAvailable: boolean = false\r\n\t@Field country: CountryCode = 'US'\r\n\t@Field currency: CurrencyCode = 'USD'\r\n\t@Field currentOrderID?: string\r\n\t@Codable(Shipping, true)\r\n\t@Field defaultShipping?: Shipping\r\n\t@Codable(Card, true)\r\n\t@Field defaultCard?: Card\r\n\r\n\t@SubCollection providers: Collection<Role> = new Collection()\r\n\t@SubCollection shippingAddresses: Collection<Shipping> = new Collection()\r\n\t@SubCollection orders: Collection<Order> = new Collection()\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}