import Spec from './ISO4217'

export type CurrencyCode =
	'AED' |
	'AFN' |
	'ALL' |
	'AMD' |
	'ANG' |
	'AOA' |
	'ARS' |
	'AUD' |
	'AWG' |
	'AZN' |
	'BAM' |
	'BBD' |
	'BDT' |
	'BGN' |
	'BHD' |
	'BIF' |
	'BMD' |
	'BND' |
	'BOB' |
	'BRL' |
	'BSD' |
	'BTN' |
	'BWP' |
	'BYR' |
	'BZD' |
	'CAD' |
	'CDF' |
	'CHF' |
	'CLP' |
	'CNY' |
	'COP' |
	'CRC' |
	'CUC' |
	'CUP' |
	'CVE' |
	'CZK' |
	'DJF' |
	'DKK' |
	'DOP' |
	'DZD' |
	'EGP' |
	'ERN' |
	'ETB' |
	'EUR' |
	'FJD' |
	'FKP' |
	'GBP' |
	'GEL' |
	'GHS' |
	'GIP' |
	'GMD' |
	'GNF' |
	'GTQ' |
	'GYD' |
	'HKD' |
	'HNL' |
	'HRK' |
	'HTG' |
	'HUF' |
	'IDR' |
	'ILS' |
	'INR' |
	'IQD' |
	'IRR' |
	'ISK' |
	'JMD' |
	'JOD' |
	'JPY' |
	'KES' |
	'KGS' |
	'KHR' |
	'KMF' |
	'KPW' |
	'KRW' |
	'KWD' |
	'KYD' |
	'KZT' |
	'LAK' |
	'LBP' |
	'LKR' |
	'LRD' |
	'LSL' |
	'LTL' |
	'LYD' |
	'MAD' |
	'MDL' |
	'MGA' |
	'MKD' |
	'MMK' |
	'MNT' |
	'MOP' |
	'MRO' |
	'MUR' |
	'MVR' |
	'MWK' |
	'MXN' |
	'MYR' |
	'MZN' |
	'NAD' |
	'NGN' |
	'NIO' |
	'NOK' |
	'NPR' |
	'NZD' |
	'OMR' |
	'PAB' |
	'PEN' |
	'PGK' |
	'PHP' |
	'PKR' |
	'PLN' |
	'PYG' |
	'QAR' |
	'RON' |
	'RSD' |
	'RUB' |
	'RWF' |
	'SAR' |
	'SBD' |
	'SCR' |
	'SDG' |
	'SEK' |
	'SGD' |
	'SHP' |
	'SLL' |
	'SOS' |
	'SRD' |
	'SSP' |
	'STD' |
	'SYP' |
	'SZL' |
	'THB' |
	'TJS' |
	'TMT' |
	'TND' |
	'TOP' |
	'TRY' |
	'TTD' |
	'TWD' |
	'TZS' |
	'UAH' |
	'UGX' |
	'USD' |
	'UYU' |
	'UZS' |
	'VEF' |
	'VND' |
	'VUV' |
	'WST' |
	'XAF' |
	'XCD' |
	'XOF' |
	'XPF' |
	'YER' |
	'ZAR' |
	'ZMW'

type CurrencySpec = {
	code: CurrencyCode,
	number: string,
	name: string,
	symbol: string,
	subunit: string
}

export const SupportedCurrencyCodes: CurrencyCode[] = ['USD', 'JPY']

export const SupportedCurrencies = Spec.filter(spec => SupportedCurrencyCodes.includes(spec.code as CurrencyCode)) as CurrencySpec[]

export const Symbol = (code: CurrencyCode) => {
	return Spec.find(spec => spec.code == code)?.symbol
}
